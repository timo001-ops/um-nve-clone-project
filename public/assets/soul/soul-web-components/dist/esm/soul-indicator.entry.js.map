{"file":"soul-indicator.entry.js","mappings":";;;AAAA,MAAM,gBAAgB,GAAG,mhmBAAmhmB;;MCS/hmB,aAAa;;;IAOhB,eAAU,GAAG,IAAI,UAAU,EAAE,CAAC;IAE9B,mBAAc,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;gBANA,GAAG;kBACH,KAAK;kBACL,KAAK;;EAOvC,UAAU,CAAC,QAAgB;IAChC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;GAC7D;EAED,MAAM;IACJ,QACE,EAAC,IAAI,QACH,YAAM,KAAK,EAAE,kCAAkC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,6BAA6B,GAAG,EAAE,EAAE,GAAS,CAClH,EACP;GACH;;;;;;;;;;","names":[],"sources":["./src/components/soul-indicator/soul-indicator.scss?tag=soul-indicator&encapsulation=shadow","./src/components/soul-indicator/soul-indicator.tsx"],"sourcesContent":["@use \"modules/core\";\n@use \"modules/components/indicator\";\n@use 'sass:string';\n\n:host {\n  --soul-indicator-size: #{indicator.$soul-indicator-s-size};\n}\n\n:host([inline]),\n:host([inline=\"true\"]) {\n  display: inline-flex;\n}\n\n:host,\n:host([inline=\"false\"]) {\n  display: block;\n}\n\n:host,\n.soul-indicator {\n  width: var(--soul-indicator-size);\n  height: var(--soul-indicator-size);\n}\n\n:host,\n:host([size='s']) {\n  --soul-indicator-size: #{indicator.$soul-indicator-s-size};\n}\n\n:host([size='m']) {\n  --soul-indicator-size: #{indicator.$soul-indicator-m-size};\n}\n\n.soul-indicator--positive {\n  @include indicator.soul-indicator-severity(core.$soul-severity-positive);\n}\n\n.soul-indicator--warning {\n  @include indicator.soul-indicator-severity(core.$soul-severity-warning);\n}\n\n.soul-indicator--critical {\n  @include indicator.soul-indicator-severity(core.$soul-severity-critical);\n}\n\n.soul-indicator--not-allowed {\n  @include indicator.soul-indicator-severity(core.$soul-severity-not-allowed);\n}\n\n.soul-indicator--locked {\n  @include indicator.soul-indicator-severity(core.$soul-severity-locked);\n}\n\n.soul-indicator--info {\n  @include indicator.soul-indicator-severity(core.$soul-severity-info);\n}\n\n.soul-indicator--help {\n  @include indicator.soul-indicator-severity(core.$soul-severity-help);\n}\n\n.soul-indicator--waiting {\n  @include indicator.soul-indicator-severity(core.$soul-severity-waiting);\n}\n\n.soul-indicator--experimental {\n  @include indicator.soul-indicator-severity(core.$soul-severity-experimental);\n}\n","import {Component, Element, h, Host, Prop, Watch} from '@stencil/core';\nimport {HostElement} from '@stencil/core/internal';\nimport {SizeHelper} from '../../services/SizeHelper';\n\n@Component({\n  tag: 'soul-indicator',\n  styleUrl: 'soul-indicator.scss',\n  shadow: true\n})\nexport class SoulIndicator {\n\n  @Prop({reflect: true}) type: 'positive' | 'warning' | 'not-allowed' | 'critical' | 'info' | 'help' | 'waiting' | 'locked' | 'experimental';\n  @Prop({reflect: true}) size: 's' | 'm' = 's';\n  @Prop({reflect: true}) inline: boolean = false;\n  @Prop({reflect: true}) border: boolean = false;\n  @Element() hostElement: HostElement;\n  private sizeHelper = new SizeHelper();\n\n  private supportedSizes = ['s', 'm', 'l'];\n\n  @Watch('size')\n  public sizeChange(newValue: string): void {\n    this.sizeHelper.validateSize(this.supportedSizes, newValue);\n  }\n\n  render() {\n    return (\n      <Host>\n        <span class={`soul-indicator soul-indicator--${this.type} ${this.border ? 'soul-indicator--with-border' : ''}`}></span>\n      </Host>\n    );\n  }\n}\n"],"version":3}
import { ComponentInterface, JSX, EventEmitter } from '../../stencil-public-runtime';
export declare class SoulInputWrapper implements ComponentInterface {
  additionalLabel: string;
  clearButton: boolean;
  inputOnly: boolean;
  helpText: string;
  invalidStyle: boolean;
  label: string;
  status: 'warning' | 'critical';
  statusMessage: string;
  tooltipPosition: 'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end';
  soulClear: EventEmitter<void>;
  private showClearButton;
  private isPasswordRevealed;
  private invalid;
  private hostElement;
  private readonly instanceId;
  private readonly INPUT_TYPE_ATTRIBUTE;
  private readonly INPUT_TYPE_DATA_ATTRIBUTE;
  private inputSlot;
  private inputElement;
  private overlayElement;
  private typeObserver;
  private tooltipElement;
  private overlayResizeObserver;
  private supportedStatuses;
  private readonly dateTimeTypes;
  private readonly typesWithClearButton;
  disconnectedCallback(): void;
  componentDidRender(): void;
  render(): JSX.Element;
  private initializeInput;
  private get isReadonly();
  private get isPasswordType();
  private get isDateType();
  private get isSearchType();
  private get isStatusValid();
  private get inputType();
  get shouldRenderStatusMessage(): boolean;
  get shouldRenderCustomIcon(): boolean;
  get showCustomIconForCurrenBrowser(): boolean;
  get shouldRenderTooltip(): boolean;
  get shouldRenderStatusIndicator(): boolean;
  get shouldRenderClearButton(): boolean;
  get isClearSupported(): boolean;
  private setTooltipTriggerElement;
  private setInputRightPadding;
  private getOverlayElementWidth;
  private onInputSlotChange;
  private checkInputValidity;
  private focusInput;
  private onInput;
  private onKeyDown;
  private setClearButtonVisibility;
  private onClearButtonClick;
  private onDateTimeIconClick;
  private onPasswordVisibilityToggle;
  private hasSlottedAction;
  private listenForTypeChange;
  private renderLabel;
  private renderAdditionalLabel;
  private renderTooltip;
  private renderSearchIcon;
  private renderInputOverlays;
  private renderPasswordVisibilityToggle;
  private renderStatusIndicator;
  private renderCalendarIcon;
  private renderClearButton;
  private renderStatusMessage;
  private renderHelpText;
  private renderAction;
}

{"file":"soul-skeleton-text2.js","mappings":";;AAAA,MAAM,mBAAmB,GAAG,o2CAAo2C;;MCQn3C,gBAAgB;;;;;IACnB,uBAAkB,GAAG,CAAC,CAAC;iBACE,IAAI,CAAC,kBAAkB;;;EAIxD,QAAQ;IACN,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC;GAC9D;EAED,MAAM;IACJ,IAAI,IAAI,CAAC,KAAK,EAAE;MACd,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACzD;IAED,MAAM,YAAY,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MACnD,WAAK,KAAK,EAAC,0BAA0B,GAAO,CAC7C,CAAC;IAEF,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAC,oBAAoB,IAC5B,YAAY,CACT,CACD,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/soul-skeleton-text/soul-skeleton-text.scss?tag=soul-skeleton-text&encapsulation=shadow","./src/components/soul-skeleton-text/soul-skeleton-text.tsx"],"sourcesContent":["@use \"modules/core\";\n@use \"modules/components/soul-skeleton\";\n\n$_skeleton-text-last-line-width: 80%;\n\n:host {\n  display: block;\n  width: 100%;\n  max-width: 100%;\n}\n\n.soul-skeleton-text {\n}\n\n.soul-skeleton-text__line {\n  @include soul-skeleton.soul-skeleton-element();\n\n  background-color: core.$soul-color-illustration-light;\n\n  + .soul-skeleton-text__line {\n    margin: core.$soul-space-stack-top-xs;\n\n    &:last-of-type {\n      width: $_skeleton-text-last-line-width;\n    }\n  }\n}\n\n@media screen and (prefers-reduced-motion: no-preference) {\n  .soul-skeleton-text__line {\n    @include soul-skeleton.soul-skeleton-shimmer-animation();\n  }\n}\n","import { Component, Element, h, Host, Prop } from '@stencil/core';\nimport { HostElement } from '@stencil/core/internal';\n\n@Component({\n  tag: 'soul-skeleton-text',\n  styleUrl: 'soul-skeleton-text.scss',\n  shadow: true,\n})\nexport class SoulSkeletonText {\n  private defaultLinesNumber = 3;\n  @Prop({ reflect: true }) lines = this.defaultLinesNumber;\n  @Prop({ reflect: true }) width: string;\n  @Element() hostElement: HostElement;\n\n  getLines(): number {\n    return this.lines < 0 ? this.defaultLinesNumber : this.lines;\n  }\n\n  render() {\n    if (this.width) {\n      this.hostElement.style.setProperty('width', this.width);\n    }\n\n    const lineElements = [...Array(this.getLines())].map(() =>\n      <div class=\"soul-skeleton-text__line\"></div>\n    );\n\n    return (\n      <Host>\n        <div class=\"soul-skeleton-text\">\n          {lineElements}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}
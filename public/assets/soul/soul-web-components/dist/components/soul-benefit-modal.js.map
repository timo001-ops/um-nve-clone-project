{"file":"soul-benefit-modal.js","mappings":";;;AAAA,MAAM,mBAAmB,GAAG,g6IAAg6I;;MCQ/6IA,kBAAgB;;;;;IAWV,4BAAuB,GAAG,6BAA6B,CAAC;gBATV,KAAK;wBACZ,IAAI;uBACL,KAAK;;;;EAUrD,MAAM,IAAI;IACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;GAClB;EAGM,MAAM,KAAK;IAChB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;GACnB;EAED,gBAAgB;IACd,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACzB,IAAI,IAAI,CAAC,IAAI,EAAE;MACb,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;KACzB;GACF;EAED,MAAM;IACJ,QACE,cAAQ,KAAK,EAAC,oBAAoB,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,cAAc,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,IAAI,CAAC,MAAM,GAAG,EAAuB,IACvH,WAAK,KAAK,EAAC,+BAA+B,IACvC,IAAI,CAAC,WAAW;MACf,WAAK,KAAK,EAAC,2BAA2B,IACpC,cAAQ,OAAO,EAAE;UACf,IAAI,CAAC,KAAK,EAAE,CAAC;SACd,EAAE,KAAK,EAAC,8EAA8E,IACrF,YAAM,KAAK,EAAC,mBAAmB,IAAC,YAAM,KAAK,EAAC,sBAAsB,GAAQ,CAAO,CAC1E,CACL;MACN,EAAE,EAEJ,WAAK,KAAK,EAAC,oDAAoD,IAC7D,YAAM,IAAI,EAAC,OAAO,GAAQ,CACtB,EACL,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;MACrD,cAAQ,KAAK,EAAC,qDAAqD,IAChE,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,WAAK,KAAK,EAAC,kCAAkC,IAC3C,UAAI,KAAK,EAAC,+BAA+B,IAAE,IAAI,CAAC,OAAO,CAAM,CACzD;QACN,EAAE,EAEH,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,WAAK,KAAK,EAAC,wCAAwC,IACjD,aAAI,IAAI,CAAC,WAAW,CAAK,CACrB;QACN,EAAE,CAEG;MACT,EAAE,EAEJ,eAAS,KAAK,EAAC,uEAAuE,IACpF,YAAM,IAAI,EAAC,SAAS,GAAQ,CACpB,EACV,cAAQ,KAAK,EAAC,qGAAqG,IACjH,YAAM,IAAI,EAAC,SAAS,GAAQ,CACrB,CACL,CACC,EACT;GACH;EAKO,YAAY;;IAClB,IAAI,CAAC,IAAI,GAAG,MAAA,IAAI,CAAC,MAAM,0CAAE,SAAS,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;GAC5D;EAEO,cAAc;IACpB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;GACvB;EAEO,iBAAiB;IACvB,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,KAAY;MAClD,KAAK,CAAC,cAAc,EAAE,CAAC;MAEvB,IAAI,IAAI,CAAC,YAAY,EAAE;QACrB,IAAI,CAAC,KAAK,EAAE,CAAC;OACd;KACF,CAAC,CAAC;GACJ;EAEO,YAAY;IAClB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IACxD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE;MAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;MACpB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;KAC5D,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAA;GACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["SoulBenefitModal"],"sources":["./src/components/soul-benefit-modal/soul-benefit-modal.scss?tag=soul-benefit-modal","./src/components/soul-benefit-modal/soul-benefit-modal.tsx"],"sourcesContent":["@use \"modules/core\";\n@use \"modules/components/heading/abstract\" as heading;\n@use \"soul-benefit-modal-animation\";\n\n\n$_modal-width: calc(#{core.$soul-space-layout-3-xl} + #{core.$soul-space-layout-xl});\n\n:host {\n  display: block;\n}\n\n.soul-benefit-modal {\n  position: relative;\n  margin: auto;\n  align-items: center;\n  max-width: $_modal-width;\n\n  border-style: solid;\n  border-color: core.$soul-color-border-on-light;\n  border-width: core.$soul-border-thin;\n  border-radius: core.$soul-border-radius-m;\n\n  background-color: core.$soul-color-background-primary;\n\n  box-shadow: core.$box-shadow-natural-m;\n\n  &::backdrop {\n    background-color: core.$soul-color-background-overlay-light;\n  }\n}\n\n@media only screen and (max-width: #{$_modal-width}) {\n  .soul-benefit-modal {\n    width: 100vw;\n    height: 100vh;\n    max-width: initial;\n    max-height: 100vh;\n    margin: 0;\n  }\n}\n\n.soul-benefit-modal__media {\n  padding: 0;\n  line-height: 0;\n  font-size: 0;\n  width: 100%;\n  overflow: hidden;\n  @include core.flexbox-row();\n  @include core.flexbox-center-horizontally-and-vertically();\n}\n\n.soul-benefit-modal__close {\n  position: absolute;\n  top: core.$soul-space-unit-2-xs;\n  right: core.$soul-space-unit-2-xs;\n}\n\n.soul-benefit-modal__header {\n  @include core.flexbox-column();\n  @include core.flexbox-center-horizontally-and-vertically();\n  padding-top: core.$soul-space-unit-xl;\n}\n\n.soul-benefit-modal__header-title {\n  @include heading.heading-variant('h4');\n  @include heading.heading-element();\n  @include heading.heading-letter-spacing();\n}\n\n.soul-benefit-modal__header-description {\n  @include core.soul-font-size(core.$soul-s);\n  margin: core.$soul-space-stack-top-xs;\n}\n\n.soul-benefit-modal__content {\n  padding: core.$soul-space-inset-xl;\n}\n\n.soul-benefit-modal__header,\n.soul-benefit-modal__buttons {\n  padding-left: core.$soul-space-unit-xl;\n  padding-right: core.$soul-space-unit-xl;\n}\n\n.soul-benefit-modal__buttons {\n  padding-bottom: core.$soul-space-unit-xl;\n  width: 100%;\n\n  > .soul-button {\n    width: 100%;\n  }\n}\n","import { Component, Event, EventEmitter, h, Method, Prop, Watch } from '@stencil/core';\nimport {isNotNull} from '../../utils/utils';\n\n@Component({\n  tag: 'soul-benefit-modal',\n  styleUrl: 'soul-benefit-modal.scss',\n  shadow: false\n})\nexport class SoulBenefitModal {\n\n  @Prop({ mutable: true, reflect: true }) public open: boolean = false;\n  @Prop({ reflect: true }) public closeWithEsc: boolean = true;\n  @Prop({ reflect: true }) public closeButton: boolean = false;\n  @Prop({ reflect: true }) public heading: string;\n  @Prop({ reflect: true }) public description: string;\n\n  @Event() public soulClose: EventEmitter<void>;\n\n  private dialog!: HTMLDialogElement;\n  private readonly CLOSING_ANIMATION_CLASS = 'soul-benefit-modal--closing';\n\n  @Method()\n  public async show() {\n    this.open = true;\n  }\n\n  @Method()\n  public async close() {\n    this.open = false;\n  }\n\n  componentDidLoad(): void {\n    this.addCancelListener();\n    if (this.open) {\n      this.dialog.showModal();\n    }\n  }\n\n  render() {\n    return (\n      <dialog class=\"soul-benefit-modal\" onClose={() => this.emitCloseEvent()} ref={el => this.dialog = el as HTMLDialogElement}>\n        <div class=\"soul-grid soul-grid--vertical\">\n          {this.closeButton ?\n            <div class=\"soul-benefit-modal__close\">\n              <button onClick={() => {\n                this.close();\n              }} class=\"soul-button soul-button--default soul-button--compact soul-button--icon-only\">\n                <span class=\"soul-button__icon\"><span class=\"a-icon a-icon--close\"></span></span>\n              </button>\n            </div> :\n            ''\n          }\n          <div class=\"soul-benefit-modal__media soul-grid-item-auto-span\">\n            <slot name=\"media\"></slot>\n          </div>\n          {isNotNull(this.heading) || isNotNull(this.description) ?\n            <header class=\"soul-benefit-modal__header soul-grid-item-auto-span\">\n              {isNotNull(this.heading) ?\n                <div class=\"soul-benefit-modal__header-title\">\n                  <h1 class=\"soul-heading soul-heading--h4\">{this.heading}</h1>\n                </div> :\n                ''\n              }\n              {isNotNull(this.description) ?\n                <div class=\"soul-benefit-modal__header-description\">\n                  <p>{this.description}</p>\n                </div> :\n                ''\n              }\n            </header> :\n            ''\n          }\n          <section class=\"soul-benefit-modal__content soul-grid-item-fill-span  h-y-auto-scroll\">\n            <slot name=\"content\"></slot>\n          </section>\n          <footer class=\"soul-benefit-modal__buttons  soul-grid-item-auto-span soul-button-group  soul-button-group--no-wrap\">\n            <slot name=\"buttons\"></slot>\n          </footer>\n        </div>\n      </dialog>\n    );\n  }\n\n  @Watch('open')\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore : method is declared but never used\n  private toggleDialog(): void {\n    this.open ? this.dialog?.showModal() : this.animateClose(); //TODO check as any. Typescript types error.\n  }\n\n  private emitCloseEvent(): void {\n    this.soulClose.emit();\n  }\n\n  private addCancelListener(): void {\n    this.dialog.addEventListener('cancel', (event: Event) => {\n      event.preventDefault();\n\n      if (this.closeWithEsc) {\n        this.close();\n      }\n    });\n  }\n\n  private animateClose(): void {\n    this.dialog.classList.add(this.CLOSING_ANIMATION_CLASS);\n    this.dialog.addEventListener('animationend', () => {\n      this.dialog.close();\n      this.dialog.classList.remove(this.CLOSING_ANIMATION_CLASS);\n    }, { once: true })\n  }\n}\n"],"version":3}
{"file":"soul-modal.js","mappings":"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","names":["SoulModal"],"sources":["./src/services/TypeHelper.ts","./src/services/PositionHelper.ts","./src/components/soul-modal/soul-modal.scss?tag=soul-modal&encapsulation=shadow","./src/components/soul-modal/soul-modal.tsx"],"sourcesContent":["import {isDefined} from '../utils/utils';\n\nexport class TypeHelper {\n\n  public isValidType(supportedTypes: string[], type: string): boolean {\n    return supportedTypes.includes(type);\n  }\n\n  public validateType(supportedTypes: string[], type?: string): void {\n    if (isDefined(type) && !this.isValidType(supportedTypes, type)) {\n      console.debug(`Type ${type} not supported. Supported types: ${supportedTypes.join(', ')}`);\n    }\n  }\n}\n\n","import {isDefined} from '../utils/utils';\n\nexport class PositionHelper {\n\n  public isValidPosition(supportedPositions: string[], position: string): boolean {\n    return supportedPositions.includes(position);\n  }\n\n  public validatePosition(supportedPositions: string[], position?: string): void {\n    if (isDefined(position) && !this.isValidPosition(supportedPositions, position)) {\n      console.debug(`Position ${position} not supported. Supported types: ${supportedPositions.join(', ')}`);\n    }\n  }\n}\n\n","@use \"modules/base-styles/reset\";\n@use \"modules/components/button\";\n@use \"soul-modal-base\";\n@use \"soul-modal-animation\";\n@use \"soul-modal-size\";\n","import { Component, ComponentDidLoad, Element, Event, EventEmitter, Method, Prop, Watch, h } from \"@stencil/core\";\nimport { SizeHelper } from \"../../services/SizeHelper\";\nimport { TypeHelper } from \"../../services/TypeHelper\";\nimport { PositionHelper } from \"../../services/PositionHelper\";\nimport {isNotEmpty} from '../../utils/utils';\n\n@Component({\n  tag: 'soul-modal',\n  styleUrl: 'soul-modal.scss',\n  shadow: true\n})\nexport class SoulModal implements ComponentDidLoad {\n\n  @Prop({ reflect: true }) public closeButton: boolean = false;\n  @Prop({ reflect: true }) public closeWithEsc: boolean = false;\n  @Prop({ reflect: true }) public heading: string;\n  @Prop({ reflect: true }) public label: string;\n  @Prop({ mutable: true, reflect: true }) public open: boolean = false;\n  @Prop({ reflect: true }) public position: 'center' | 'side-right' | 'side-left' = 'center';\n  @Prop({ reflect: true }) public size: 's' | 'm' | 'l' | 'xl' = 'm';\n  @Prop({ reflect: true }) public type: 'neutral' | 'info' | 'warning' | 'critical' = 'neutral';\n\n  @Event() public soulClose: EventEmitter<void>;\n\n  @Element() public host: HTMLElement;\n  private readonly NO_FOOTER_CLASS = 'soul-modal--no-footer';\n  private readonly CLOSING_ANIMATION_CLASS = 'soul-modal--closing';\n  private dialog: HTMLDialogElement;\n  private typesWithIndicator = ['info', 'warning', 'critical'];\n  private supportedTypes = [...this.typesWithIndicator, 'neutral'];\n  private supportedSizes = ['s', 'm', 'l', 'xl'];\n  private supportedPositions = ['center', 'side-right', 'side-left'];\n  private sizeHelper = new SizeHelper();\n  private typeHelper = new TypeHelper();\n  private positionHelper = new PositionHelper();\n\n  @Method()\n  public async show() {\n    this.open = true;\n  }\n\n  @Method()\n  public async close() {\n    this.open = false;\n  }\n\n  componentDidLoad(): void {\n    this.checkEmtpyButtons();\n    this.addCancelListener();\n    this.validateType();\n    this.validateSize();\n    this.validatePosition();\n    if (this.open) {\n      this.dialog.showModal();\n    }\n  }\n\n  render() {\n    return (\n      <dialog class={{\n        'soul-modal': true,\n        'soul-modal--side-right': this.position === 'side-right',\n        'soul-modal--side-left': this.position === 'side-left',\n        'soul-modal--center': this.position === 'center' || !this.isPositionSupported(),\n        [this.isSizeSupported() ? `soul-modal--${this.size}` : 'soul-modal--m']: true\n      }} onClose={() => this.emitCloseEvent()}\n        ref={el => this.dialog = el as HTMLDialogElement}>\n        <section class=\"soul-modal__window\">\n          {this.closeButton ? <div class=\"soul-modal__close\">\n            <button onClick={() => {\n              this.close();\n            }} class=\"soul-button soul-button--default soul-button--compact soul-button--icon-only\">\n              <span class=\"soul-button__icon\"><soul-icon name=\"close\"></soul-icon></span>\n            </button>\n          </div> : ''}\n          <header class=\"soul-modal__header\">\n            {this.isTypeWithIndicator(this.type) ? <soul-indicator class=\"soul-modal__indicator\" type={this.type}></soul-indicator> : ''}\n            <div class=\"soul-modal__header-content\">\n              {isNotEmpty(this.label) ? <span class=\"soul-modal__label\">{this.label}</span> : ''}\n              <h1 class=\"soul-modal__heading\">{this.heading}</h1>\n            </div>\n          </header>\n          <article class=\"soul-modal__body\">\n            <div class=\"soul-modal__top-content\">\n              <slot name=\"top-content\"></slot>\n            </div>\n            <div class=\"soul-modal__content\">\n              <slot name=\"content\"></slot>\n            </div>\n          </article>\n          <footer class=\"soul-modal__footer\">\n            <slot onSlotchange={() => this.checkEmtpyButtons()} name=\"buttons\"></slot>\n          </footer>\n        </section>\n      </dialog>\n    );\n  }\n\n  @Watch('type')\n  private validateType(): void {\n    this.typeHelper.validateType(this.supportedTypes, this.type);\n  }\n\n  @Watch('size')\n  private validateSize(): void {\n    this.sizeHelper.validateSize(this.supportedSizes, this.size);\n  }\n\n  @Watch('position')\n  private validatePosition(): void {\n    this.positionHelper.validatePosition(this.supportedPositions, this.position);\n  }\n\n  @Watch('open')\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore : method is declared but never used\n  private toggleDialog(): void {\n    this.open ? this.dialog?.showModal() : this.animateClose();\n  }\n\n  private addCancelListener(): void {\n    this.dialog.addEventListener('cancel', (event: Event) => {\n      event.preventDefault();\n\n      if (this.closeWithEsc) {\n        this.close();\n      }\n    });\n  }\n\n  private isTypeWithIndicator(type: 'neutral' | 'info' | 'warning' | 'critical'): type is 'info' | 'warning' | 'critical' {\n    return type && this.typeHelper.isValidType(this.typesWithIndicator, type);\n  }\n\n  private isSizeSupported(): boolean {\n    return this.size && this.sizeHelper.isValidSize(this.supportedSizes, this.size);\n  }\n\n  private isPositionSupported(): boolean {\n    return this.position && this.positionHelper.isValidPosition(this.supportedPositions, this.position);\n  }\n\n  private emitCloseEvent(): void {\n    this.soulClose.emit();\n  }\n\n  private animateClose(): void {\n    this.dialog.classList.add(this.CLOSING_ANIMATION_CLASS);\n    this.dialog.addEventListener('animationend', () => {\n      this.dialog.close();\n      this.dialog.classList.remove(this.CLOSING_ANIMATION_CLASS);\n    }, { once: true })\n  }\n\n  private checkEmtpyButtons(): void {\n    this.host.querySelector('[slot=\"buttons\"]') ?\n      this.dialog.classList.remove(this.NO_FOOTER_CLASS) :\n      this.dialog.classList.add(this.NO_FOOTER_CLASS);\n  }\n}\n"],"version":3}
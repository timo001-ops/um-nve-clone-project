{"file":"soul-tooltip.entry.cjs.js","mappings":";;;;;;;;MAGa,aAAa;EAOxB,YAAY,SAAsB,EAAE,OAAoB;IAHhD,oBAAe,GAAc,WAAW,CAAC;IAS1C,gBAAW,GAAG;;MACnB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QACxE,MAAA,IAAI,CAAC,OAAO,0CAAE,WAAW,EAAE,CAAC;OAC7B;KACF,CAAC;IAEK,gBAAW,GAAG;MACnB,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;QACzB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;OAC5B;KACF,CAAC;IAfA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC3B,IAAI,CAAC,OAAO,GAAG,OAA6B,CAAC;IAC7C,IAAI,CAAC,wBAAwB,EAAE,CAAC;GACjC;EAcM,OAAO;IACZ,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;MACpC,OAAO;KACR;IACD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAE/C,MAAM,cAAc,GAAG;MACrBA,kCAAe,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAC1C;QACE,QAAQ,EAAE,OAAO;QACjB,SAAS,EAAE,IAAI,CAAC,eAAe;QAC/B,UAAU,EAAE;UACVC,yBAAM,CAAC,CAAC,CAAC;UACTC,uBAAI,CAAC,EAAC,cAAc,EAAE,WAAW,EAAC,CAAC;UACnCA,uBAAI,CAAC,EAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAC,CAAC;UAC/BC,uBAAI,CAAC,EAAC,cAAc,EAAE,WAAW,EAAC,CAAC;SAAE;OACxC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,cAAc,EAAC;QAC/B,IAAI,cAAc,CAAC,IAAI,EAAE;UACvB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YAChC,UAAU,EAAE,cAAc,CAAC,IAAI,CAAC,eAAe,GAAG,QAAQ,GAAG,SAAS;WACvE,CAAC,CAAC;SACJ;QACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;UAChC,IAAI,EAAE,GAAG,CAAC,IAAI;UACd,GAAG,EAAE,GAAG,CAAC,IAAI;SACd,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ,CAAC;IAEF,IAAI,CAAC,cAAc,GAAGC,6BAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;GAChF;EAEM,UAAU;IACf,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACnC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;GAC9C;EAEM,kBAAkB,CAAC,QAAmB;IAC3C,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;GACjC;EAEO,wBAAwB;IAC9B,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAChE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAChE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3D,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;GAC3D;EAEO,2BAA2B;IACjC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACnE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACnE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC9D,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;GAC9D;EAEO,cAAc;IACpB,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;GAC/E;;;ACrFH,MAAM,cAAc,GAAG,gzBAAgzB;;MCS1zB,oBAAoB;;;oBAE4J,WAAW;;;;;;EAS/L,oBAAoB;;IACzB,MAAA,IAAI,CAAC,aAAa,0CAAE,UAAU,EAAE,CAAC;GAClC;EAEM,gBAAgB;IACrB,IAAI,CAAC,uBAAuB,EAAE,CAAC;GAChC;EAEM,MAAM;IACX,QACEC,QAACC,UAAI,QACHD,iBAAK,KAAK,EAAE,EAAC,cAAc,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,CAAC,WAAW,EAAC,EAAE,GAAG,EAAE,EAAE,IAAI,IAAI,CAAC,cAAc,GAAG,EAAoB,EAAE,IAAI,EAAC,SAAS,IAChJ,IAAI,CAAC,IAAI,CAAO,CACd,EACP;GACH;EAED,IAAY,WAAW;IACrB,OAAO,CAAC,CAACE,eAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAACA,eAAS,CAAC,IAAI,CAAC,cAAc,CAAC,MAAMC,mBAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAACD,eAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GAC/H;EAIO,uBAAuB;;IAC7B,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAChD,MAAA,IAAI,CAAC,aAAa,0CAAE,UAAU,EAAE,CAAC;IACjC,IAAIA,eAAS,CAAC,cAAc,CAAC,EAAE;MAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;MAC5E,IAAI,CAAC,kBAAkB,EAAE,CAAC;MAC1B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;MAC7B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;GACF;EAGO,kBAAkB;;IACxB,MAAA,IAAI,CAAC,aAAa,0CAAE,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GACvD;EAEO,iBAAiB;IACvB,OAAOA,eAAS,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;GACvG;;;;;;;;;;;","names":["computePosition","offset","flip","hide","autoUpdate","h","Host","isDefined","isEmptyString"],"sources":["./src/services/TooltipHelper.ts","./src/components/soul-tooltip/soul-tooltip.scss?tag=soul-tooltip&encapsulation=shadow","./src/components/soul-tooltip/soul-tooltip.component.tsx"],"sourcesContent":["import {autoUpdate, computePosition, flip, hide, offset, Placement} from '@floating-ui/dom';\nimport {HTMLPopoverElement} from '../types/PopoverElement';\n\nexport class TooltipHelper {\n\n  private reference: HTMLElement;\n  private tooltip: HTMLPopoverElement;\n  private tooltipPosition: Placement = 'top-start';\n  private stopAutoUpdate: () => void;\n\n  constructor(reference: HTMLElement, tooltip: HTMLElement) {\n    this.reference = reference;\n    this.tooltip = tooltip as HTMLPopoverElement;\n    this.addTriggerEventListeners();\n  }\n\n  public showTooltip = () => {\n    if (this.reference.matches(':focus') || this.reference.matches(':hover')) {\n      this.tooltip?.showPopover();\n    }\n  };\n\n  public hideTooltip = () => {\n    if (this.canHideTooltip()) {\n      this.tooltip.hidePopover();\n    }\n  };\n\n  public connect(): void {\n    if (!this.tooltip || !this.reference) {\n      return;\n    }\n    this.tooltip.setAttribute('popover', 'manual');\n\n    const updateCallback = () => {\n      computePosition(this.reference, this.tooltip,\n        {\n          strategy: 'fixed',\n          placement: this.tooltipPosition,\n          middleware: [\n            offset(1),\n            flip({elementContext: 'reference'}),\n            flip({boundary: document.body}),\n            hide({elementContext: 'reference'}),]\n        }).then(({x, y, middlewareData}) => {\n        if (middlewareData.hide) {\n          Object.assign(this.tooltip.style, {\n            visibility: middlewareData.hide.referenceHidden ? 'hidden' : 'visible'\n          });\n        }\n        Object.assign(this.tooltip.style, {\n          left: `${x}px`,\n          top: `${y}px`\n        });\n      });\n    };\n\n    this.stopAutoUpdate = autoUpdate(this.reference, this.tooltip, updateCallback);\n  }\n\n  public disconnect(): void {\n    this.removeTriggerEventListeners();\n    this.stopAutoUpdate && this.stopAutoUpdate();\n  }\n\n  public setTooltipPosition(position: Placement): void {\n    this.tooltipPosition = position;\n  }\n\n  private addTriggerEventListeners(): void {\n    this.reference.addEventListener('mouseenter', this.showTooltip);\n    this.reference.addEventListener('mouseleave', this.hideTooltip);\n    this.reference.addEventListener('focus', this.showTooltip);\n    this.reference.addEventListener('blur', this.hideTooltip);\n  }\n\n  private removeTriggerEventListeners(): void {\n    this.reference.removeEventListener('mouseenter', this.showTooltip);\n    this.reference.removeEventListener('mouseleave', this.hideTooltip);\n    this.reference.removeEventListener('focus', this.showTooltip);\n    this.reference.removeEventListener('blur', this.hideTooltip);\n  }\n\n  private canHideTooltip(): boolean {\n    return !this.reference.matches(':focus') && !this.reference.matches(':hover');\n  }\n}\n","@use \"modules/core\";\n\n.soul-tooltip {\n  position: fixed;\n  padding: core.$soul-space-squish-2-xs;\n  border-radius: core.$soul-border-radius-m;\n  margin: 0;\n  border: 0;\n  background-color: core.$soul-color-background-inverse-default;\n  color: core.$soul-color-text-on-dark;\n}\n\n.soul-tooltip--hidden {\n  visibility: hidden;\n}\n\n:host([status=\"warning\"]) {\n  .soul-tooltip {\n    background-color: core.$soul-color-background-status-warning;\n    color: core.$soul-color-text-on-light;\n  }\n}\n\n:host([status=\"critical\"]) {\n  .soul-tooltip {\n    background-color: core.$soul-color-background-status-critical;\n    color: core.$soul-color-text-on-dark;\n  }\n}\n","import {Component, Host, h, JSX, Prop, ComponentDidLoad, Watch} from '@stencil/core';\nimport {TooltipHelper} from '../../services/TooltipHelper';\nimport {isDefined, isEmptyString} from '../../utils/utils';\n\n@Component({\n  tag: 'soul-tooltip',\n  styleUrl: 'soul-tooltip.scss',\n  shadow: true\n})\nexport class SoulTooltipComponent implements ComponentDidLoad {\n\n  @Prop({reflect: true}) position: 'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' = 'top-start';\n  @Prop({reflect: true}) status: 'warning' | 'critical';\n  @Prop({reflect: true}) triggerId: string;\n  @Prop({reflect: true}) text: string;\n  @Prop({reflect: false}) triggerElement: HTMLElement;\n\n  private tooltipElement: HTMLDivElement;\n  private tooltipHelper: TooltipHelper;\n\n  public disconnectedCallback(): void {\n    this.tooltipHelper?.disconnect();\n  }\n\n  public componentDidLoad(): void {\n    this.initializeTooltipHelper();\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Host>\n        <div class={{'soul-tooltip': true, 'soul-tooltip--hidden': this.hideTooltip}} ref={el => this.tooltipElement = el as HTMLDivElement} role=\"tooltip\">\n          {this.text}</div>\n      </Host>\n    );\n  }\n\n  private get hideTooltip(): boolean {\n    return (!isDefined(this.triggerId) && !isDefined(this.triggerElement)) || (isEmptyString(this.text) || !isDefined(this.text));\n  }\n\n  @Watch('triggerId')\n  @Watch('triggerElement')\n  private initializeTooltipHelper(): void {\n    const triggerElement = this.getTriggerElement();\n    this.tooltipHelper?.disconnect();\n    if (isDefined(triggerElement)) {\n      this.tooltipHelper = new TooltipHelper(triggerElement, this.tooltipElement);\n      this.setTooltipPosition();\n      this.tooltipHelper.connect();\n      this.tooltipHelper.showTooltip();\n    }\n  }\n\n  @Watch('position')\n  private setTooltipPosition(): void {\n    this.tooltipHelper?.setTooltipPosition(this.position);\n  }\n\n  private getTriggerElement(): HTMLElement | null {\n    return isDefined(this.triggerElement) ? this.triggerElement : document.getElementById(this.triggerId);\n  }\n\n}\n"],"version":3}
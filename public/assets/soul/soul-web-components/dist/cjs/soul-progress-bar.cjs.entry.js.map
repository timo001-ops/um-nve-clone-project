{"file":"soul-progress-bar.entry.cjs.js","mappings":"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","names":["ProgressHelper","StatusHelper","h","Host","isDefined","isNotEmpty"],"sources":["./src/components/soul-progress-bar/soul-progress-bar.scss?tag=soul-progress-bar&encapsulation=shadow","./src/components/soul-progress-bar/soul-progress-bar.tsx"],"sourcesContent":["@use 'modules/core';\n@use 'modules/essentials/helpers';\n@use 'modules/components/label';\n@use 'modules/components/sign';\n@use 'modules/components/progress-bar';\n\n:host {\n  display: block;\n  width: 100%;\n}\n\n:host,\n:host([color='neutral']) {\n  --soul-progress-bar-fill-color: #{core.$soul-color-background-interactive-default-selected};\n}\n\n:host([color='primary']) {\n  --soul-progress-bar-fill-color: #{core.$soul-color-background-status-brand-primary};\n}\n\n.soul-progress-bar__content {\n  overflow: hidden;\n}\n\n.soul-progress-bar--warning {\n  --soul-progress-bar-fill-color: #{core.$soul-color-background-status-warning};\n}\n\n.soul-progress-bar--critical {\n  --soul-progress-bar-fill-color: #{core.$soul-color-background-status-critical};\n}\n\n.soul-progress-bar--positive {\n  --soul-progress-bar-fill-color: #{core.$soul-color-background-status-positive};\n}\n","import {Component, Host, h, Prop, Watch, ComponentWillLoad} from '@stencil/core';\nimport {isDefined, isNotEmpty} from '../../utils/utils';\nimport {ProgressHelper, ProgressRange} from '../../services/ProgressHelper';\nimport {StatusHelper} from '../../services/StatusHelper';\n\n@Component({\n  tag: 'soul-progress-bar',\n  styleUrl: 'soul-progress-bar.scss',\n  shadow: true,\n})\nexport class SoulProgressBar implements ComponentWillLoad {\n\n  @Prop({reflect: true}) label: string;\n  @Prop({reflect: true}) progress: number;\n  @Prop({reflect: true}) min = 0;\n  @Prop({reflect: true}) max = 100;\n  @Prop({reflect: true}) hideLabel: boolean = false;\n  @Prop({reflect: true}) indeterminate: boolean = false;\n  @Prop({reflect: true}) status: 'warning' | 'positive' | 'critical';\n  @Prop({reflect: true}) color: 'neutral' | 'primary' = 'neutral';\n\n  private supportedStatuses = ['positive', 'warning', 'critical'];\n\n  private progressHelper = new ProgressHelper();\n  private statusHelper = new StatusHelper();\n  private range: ProgressRange = {min: 0, max: 100};\n\n  componentWillLoad(): Promise<void> | void {\n    this.range = this.progressHelper.getRange(this.min, this.max);\n  }\n\n  @Watch('min')\n  @Watch('max')\n  rangeValueChange(): void {\n    this.range = this.progressHelper.getRange(this.min, this.max);\n  }\n\n  @Watch('status')\n  public statusChange(newValue: string): void {\n    this.statusHelper.validateStatus(this.supportedStatuses, newValue);\n  }\n\n  render() {\n    const progressPercentage = this.progressHelper.getProgressPercentage(this.range, this.progress);\n    const label = this.progressHelper.getLabel(this.label, this.indeterminate, progressPercentage);\n    return (\n      <Host role=\"progressbar\" aria-valuemin={this.range.min} aria-valuemax={this.range.max} aria-valuenow={this.progress} aria-label={label} title={this.hideLabel ? label : ''}>\n        <div class={{\n          'soul-progress-bar soul-progress-bar--default': true,\n          [this.indeterminate ? 'soul-progress-bar--indeterminate' : 'soul-progress-bar--determinate']: true,\n          'soul-progress-bar--critical': this.status === 'critical',\n          'soul-progress-bar--warning': this.status === 'warning',\n          'soul-progress-bar--positive': this.status === 'positive'\n        }}>\n          <div class=\"soul-progress-bar__track\">\n            <div class=\"soul-progress-bar__fill\" style={{width: `${progressPercentage}%`}}></div>\n          </div>\n          {this.hasLabel(label) ?\n            <div class=\"soul-progress-bar__content\">\n              {isDefined(this.status) && this.statusHelper.isValidStatus(this.supportedStatuses, this.status) ?\n                <div class=\"soul-sign  soul-sign--regular soul-sign--inline\">\n                  <span class=\"soul-sign__icon\"><soul-indicator size=\"s\" type={this.status}></soul-indicator></span>\n                  <span class=\"soul-sign__text\">\n                    <span class={{\n                      'soul-label soul-label--reduced h-truncate': true,\n                      'soul-label--negative': this.status === 'critical',\n                      'soul-label--warning': this.status === 'warning',\n                      'soul-label--positive': this.status === 'positive'\n                    }}>{label}</span>\n                  </span>\n                </div> :\n                <span class=\"soul-label soul-label--reduced h-truncate\">{label}</span>}\n            </div> : ''\n          }\n        </div>\n      </Host>\n    );\n  }\n\n  private hasLabel(label: string): boolean {\n    return !this.hideLabel && isNotEmpty(label);\n  }\n\n}\n"],"version":3}
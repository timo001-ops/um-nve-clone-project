{"version":3,"names":["PopoverHelper","constructor","this","popoverSupported","DISTANCE_REFERENCE_FLOATING","connect","reference","floating","maxHeight","setPopoverSupport","isPopoverInModal","classList","add","callback","computePosition","strategy","placement","middleware","offset","flip","fallbackPlacements","fallbackStrategy","boundary","document","body","padding","size","apply","rects","elements","availableHeight","Object","assign","style","width","then","computedPosition","top","y","left","x","stopAutoUpdate","autoUpdate","disconnect","element","isPopoverSupported","isDefined","getModalParent","HTMLElement","prototype","contains","getRootNode","host","closest","soulSelectCss","SoulSelect","hostRef","supportedStatuses","highlightedIndex","isPopoverVisible","instanceId","selectId","popoverHelper","optionHeightObserver","ResizeObserver","resizePlaceholderElement","bind","componentDidRender","optionListElement","addEventListener","event","newState","resetHighlight","observe","optionCloneElement","setPlaceholderElementHeight","setActionSlotVisibility","setTooltipTriggerElement","disconnectedCallback","async","updateSelectedOptionClone","detail","onOptionHover","highlighted","getOptions","findIndex","option","selectOption","changedOption","doOnSelectChange","selected","isSelected","bubbling","stateless","dataSelected","deselectOtherOptions","soulOptionSelect","emit","value","areAllOptionsDeselected","emptyElement","selectionElement","onDisabledChange","selectedElements","filter","forEach","selectedElement","keyboardEvent","searchable","isKeyboardKeyAction","setFilterDataAttributes","inputElement","trim","matchingOptions","getMatchingOptions","soulSearch","searchTerm","matches","length","togglePopover","highlightNotFilteredOption","showEmptyOptionMessage","every","hasAttribute","SelectHelper","FILTER_ATTRIBUTE","render","h","Host","class","status","ref","el","selectElement","inputOnly","isNotEmpty","label","additionalLabel","htmlFor","renderTooltip","disabled","onKeyDown","onKeyUp","onClick","id","type","spellcheck","readonly","pattern","required","placeholderElement","placeholder","name","color","shouldRenderStatusMessage","statusMessage","helpText","actionElement","popover","noOptionsMessage","optionsElement","onSlotchange","shouldRenderTooltip","isStatusValid","includes","text","undefined","position","tooltipPosition","tooltipElement","isOptionFiltered","nonFilterable","highlightedOption","isOptionUsable","highlightFirstNotFilteredOption","removeCurrentOptionHighlight","firstVisibleOptionIndex","highlightOptionByIndex","term","options","allMatchPromises","soulOption","isOptionHidden","setAttribute","searchFunction","removeAttribute","push","match","Promise","all","key","Keymap","SPACE","onSpaceKeyDown","DOWN","openOrElse","highlightNextOption","preventDefault","UP","highlightPreviousOption","ENTER","selectHighlightedOption","ESC","resetSearch","optionElement","selectedOptionClone","clone","passive","_a","appendChild","firstChild","removeChild","exclude","elseFunction","hidePopover","setHighlightedOptionIndex","showPopover","scrollToHighlightedOption","firstOption","clonedOption","replaceChildren","height","getBoundingClientRect","disableSpaces","assignedElements","isLastOptionHighlighted","isFirstOptionHighlighted","index","previousIndex","getPreviousIndex","scrollUpToOption","nextIndex","getNextIndex","scrollDownToOption","isHighlightedOptionVisible","scrollIntoView","optionsListHeight","offsetHeight","optionHeight","scrollOffset","scrollTop","topOffset","scrollTo","reduce","previousValue","tagName","elementOptions","Array","from","children","optionToSelect","setTimeout","selectedOption","previousIndexOption","nextIndexOption","setProperty","entries","contentRect","isOptionDisabled","GROUP_DISABLED_ATTRIBUTE","hidden","GROUP_HIDDEN_ATTRIBUTE","isUndefined","triggerElement"],"sources":["./src/services/PopoverHelper.ts","./src/components/soul-select/soul-select.scss?tag=soul-select&encapsulation=shadow","./src/components/soul-select/soul-select.tsx"],"sourcesContent":["import {autoUpdate, computePosition, flip, offset, size} from '@floating-ui/dom';\nimport {isDefined} from '../utils/utils';\n\nexport class PopoverHelper {\n\n  private stopAutoUpdate: () => void;\n  private popoverSupported = true;\n  private readonly DISTANCE_REFERENCE_FLOATING = 4;\n\n  public connect(reference: HTMLElement, floating: HTMLElement, maxHeight: string) {\n    this.setPopoverSupport(floating);\n    if (!this.popoverSupported && this.isPopoverInModal(floating)) {\n      floating.classList.add('_popover-in-modal');\n    }\n    const callback = () => {\n      computePosition(reference, floating, {\n        strategy: 'fixed',\n        placement: 'bottom',\n        middleware: [\n          offset(this.DISTANCE_REFERENCE_FLOATING),\n          flip({\n            fallbackPlacements: ['top', 'bottom'],\n            fallbackStrategy: 'initialPlacement',\n            boundary: document.body,\n            padding: 5\n          }),\n          size({\n            apply: ({rects, elements, availableHeight}) => {\n              Object.assign(elements.floating.style, {\n                width: `${rects.reference.width}px`,\n                maxHeight: `min(${availableHeight}px, ${maxHeight})`\n              });\n            },\n            padding: 5,\n            boundary: document.body\n          })\n        ]\n      }).then((computedPosition) => {\n        Object.assign(floating.style, {\n          top: `${computedPosition.y}px`,\n          left: `${computedPosition.x}px`\n        });\n      });\n    };\n\n    this.stopAutoUpdate = autoUpdate(\n      reference,\n      floating,\n      callback,\n    );\n\n  }\n\n  public disconnect() {\n    this.stopAutoUpdate && this.stopAutoUpdate();\n  }\n\n  private setPopoverSupport(element: HTMLElement): void {\n    this.popoverSupported = this.isPopoverSupported(element);\n  }\n\n  private isPopoverInModal(element: HTMLElement) {\n    return isDefined(this.getModalParent(element));\n  }\n\n  private isPopoverSupported(element: HTMLElement): boolean {\n    return (\n      (typeof HTMLElement !== 'undefined' &&\n        typeof HTMLElement.prototype === 'object' &&\n        'popover' in HTMLElement.prototype) && (!element.classList.contains(':popover-open'))\n    );\n  }\n\n  private getModalParent(reference: HTMLElement) {\n    return (reference.getRootNode() as ShadowRoot).host.closest('soul-modal');\n  }\n\n}\n","@use \"modules/base-styles/reset\";\n@use \"modules/core\";\n@use \"modules/components/label\" as label;\n\n@use \"modules/core/mixins/input\";\n@use \"modules/components/badge\";\n@use \"modules/components/indicator\";\n@use \"modules/components/tooltip\";\n\n$_arrow-icon-inline-padding: core.$soul-space-unit-xs;\n$_out-of-the-screen-offset: -9999px;\n\n:host {\n  display: block;\n  --soul-select-input-width: 1fr;\n}\n\n:host([input-only]:not([input-only=\"false\"])) {\n  .soul-select__label,\n  .soul-select__status-message,\n  .soul-select__help,\n  .soul-select__action {\n    display: none;\n  }\n}\n\n.soul-select {\n  display: grid;\n  grid-template-columns: var(--soul-select-input-width) auto;\n  grid-template-rows: auto auto auto auto;\n  grid-template-areas: \"label label\" \"input action\" \"status status\" \"help help\";\n}\n\n.soul-select__label {\n  grid-area: label;\n  @include label.label();\n  @include label.label-input();\n}\n\n.soul-select__additional-label {\n  padding: core.$soul-space-inline-left-3-xs;\n}\n\n.soul-select__additional-label,\n.soul-select__help {\n  @include label.label();\n  @include core.soul-font-weight-regular();\n  @include label.label-reduced();\n}\n\n.soul-select__control {\n  grid-area: input;\n  position: relative;\n  overflow: hidden;\n}\n\n.soul-select__input-icon {\n  display: flex;\n  align-items: center;\n  position: absolute;\n  right: $_arrow-icon-inline-padding;\n  top: 0;\n  bottom: 0;\n  margin: auto 0;\n  height: 100%;\n  pointer-events: none;\n}\n\ninput {\n  &.soul-select__input {\n    @include input.input-element-base();\n    @include core.anchorToContainer();\n    padding-right: core.$soul-space-unit-l;\n\n    &[readonly] {\n      cursor: pointer;\n    }\n\n    &[disabled] {\n      cursor: not-allowed;\n    }\n\n    &:disabled + .soul-select__selection {\n      background-color: core.$soul-color-background-disabled;\n      color: core.$soul-color-text-disabled;\n    }\n  }\n\n  &:valid {\n    &.soul-select__input:not([readonly]):not([disabled]) {\n      & + .soul-select__selection,\n      & ~ .soul-select__placeholder {\n        visibility: hidden;\n      }\n    }\n  }\n}\n\n.soul-select {\n  input.soul-select__input {\n    background-color: core.$soul-choice-color-transparent;\n  }\n}\n\n.soul-select__selection {\n  @include core.soul-font-size(core.$soul-s);\n  @include core.ease-transition(core.$faster, opacity, padding, border, box-shadow);\n  @include core.input-border-base();\n\n  min-height: core.$soul-space-unit-xl;\n  padding-right: core.$soul-space-unit-l;\n  pointer-events: none;\n  display: none;\n}\n\n.soul-select__placeholder {\n  pointer-events: none;\n  display: flex;\n  align-items: center;\n  padding: core.$soul-space-inset-xs;\n}\n\n.soul-select__placeholder,\n.soul-select__selection {\n  background-color: core.$soul-color-background-primary;\n}\n\n.soul-select__status-message {\n  grid-area: status;\n}\n\n.soul-select__help {\n  grid-area: help;\n}\n\n.soul-select__status-message,\n.soul-select__help {\n  padding: core.$soul-space-stack-top-2-xs;\n}\n\n.soul-select__selection:not(:empty) {\n  display: block;\n\n  + .soul-select__placeholder {\n    display: none;\n  }\n}\n\n.soul-select__options {\n  margin: 0;\n  padding: 0;\n  background-color: core.$soul-color-background-primary;\n  border-width: core.$soul-border-thin;\n  border-style: solid;\n  border-color: core.$soul-color-border-on-light;\n  border-radius: core.$soul-border-radius-s;\n}\n\n.soul-select__options {\n\n  box-shadow: core.$box-shadow-natural-m;\n\n  ::slotted(soul-text-option),\n  ::slotted(soul-avatar-option) {\n    padding: core.$soul-space-squish-2-xs;\n  }\n\n  ::slotted(soul-text-option:first-of-type),\n  ::slotted(soul-avatar-option:first-of-type) {\n    padding-top: core.$soul-space-unit-2-xs;\n  }\n\n  ::slotted(soul-text-option:last-of-type),\n  ::slotted(soul-avatar-option:last-of-type) {\n    padding-bottom: core.$soul-space-unit-2-xs;\n  }\n\n  ::slotted(soul-option-group) {\n    padding: core.$soul-space-stack-top-xs;\n  }\n\n  ::slotted(soul-option-group:first-of-type) {\n    padding-top: core.$soul-space-unit-xs;\n  }\n\n  ::slotted(soul-option-group:last-of-type) {\n    padding-bottom: core.$soul-space-unit-3-xs;\n  }\n\n}\n\n.soul-select__option-clone {\n  @include core.out-of-the-screen();\n  top: $_out-of-the-screen-offset;\n}\n\n\n.soul-select--warning,\n.soul-select--critical {\n\n  .soul-select__control {\n    &:after {\n      content: '';\n      position: absolute;\n      right: core.$soul-space-unit-l;\n      top: calc(50% - (#{indicator.$soul-indicator-s-size} / 2));\n      pointer-events: none;\n\n      @include indicator.soul-indicator-s();\n    }\n  }\n\n  .soul-select__input,\n  .soul-select__selection {\n    padding-right: core.$soul-space-unit-2-xl;\n  }\n}\n\n.soul-select--warning {\n\n  .soul-select__control:after {\n    @include indicator.soul-indicator-severity(core.$soul-severity-warning);\n  }\n\n  .soul-select__input {\n    @include input.input-warning();\n  }\n\n  .soul-select__status-message {\n    display: block;\n    color: core.$soul-color-text-indicator-warning;\n  }\n}\n\n.soul-select--critical {\n\n  .soul-select__control:after {\n    @include indicator.soul-indicator-severity(core.$soul-severity-critical);\n  }\n\n  .soul-select__input {\n    @include input.input-negative();\n\n  }\n\n  .soul-select__status-message {\n    display: block;\n    color: core.$soul-color-text-indicator-negative;\n  }\n}\n\n.soul-select__action {\n  grid-area: action;\n  display: var(--_soul-select-action-display, none);\n  align-self: center;\n  padding: core.$soul-space-inline-left-2-xs;\n}\n\n._popover-in-modal.\\:popover-open {\n  position: static;\n}\n\n.soul-select__options-message {\n  padding: core.$soul-space-stack-both-m;\n  text-align: center;\n}\n","import {Component, ComponentInterface, Element, Event, EventEmitter, h, Host, Listen, Prop, State, Watch} from '@stencil/core';\nimport {PopoverHelper} from '../../services/PopoverHelper';\nimport {isDefined, isNotEmpty, isUndefined} from '../../utils/utils';\nimport {isKeyboardKeyAction, Keymap} from '../../utils/Keymap';\nimport {SelectHelper} from '../../services/SelectHelper';\nimport {Components} from '../../components';\nimport SoulTextOption = Components.SoulTextOption;\nimport SoulAvatarOption = Components.SoulAvatarOption;\n\n@Component({\n  tag: 'soul-select',\n  styleUrl: 'soul-select.scss',\n  shadow: true\n})\nexport class SoulSelect implements ComponentInterface {\n\n  @Prop({reflect: true}) public additionalLabel?: string;\n  @Prop({reflect: true}) public disabled: boolean = false;\n  @Prop({reflect: true}) public disableSpaces: boolean = false;\n  @Prop({reflect: true}) public helpText?: string;\n  @Prop({reflect: true}) public inputOnly: boolean = false;\n  @Prop({reflect: true}) public label?: string;\n  @Prop({reflect: true}) public maxHeight = '18rem';\n  @Prop({reflect: true}) public noOptionsMessage = 'No options';\n  @Prop({reflect: true}) public placeholder?: string;\n  @Prop({reflect: true}) public searchable: boolean = false;\n  @Prop({reflect: true}) public stateless: boolean = false;\n  @Prop({reflect: true}) public status: 'warning' | 'critical';\n  @Prop({reflect: true}) public statusMessage?: string;\n  @Prop({reflect: true}) public tooltipPosition: 'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' = 'top-start';\n  @Prop() public searchFunction: <K extends HTMLSoulTextOptionElement | HTMLSoulAvatarOptionElement>(option: K, term: string) => boolean;\n\n  @Element() public host: HTMLElement;\n\n  @Event() public soulOptionSelect: EventEmitter<any>;\n  @Event() public soulSearch: EventEmitter<SoulSelectSearchEvent>;\n  @State() private showEmptyOptionMessage = false;\n\n  private actionElement: HTMLSlotElement;\n  private inputElement: HTMLInputElement;\n  private selectionElement: HTMLDivElement;\n  private optionCloneElement: HTMLDivElement;\n  private optionsElement: HTMLSlotElement;\n  private optionListElement: HTMLPopoverElement;\n  private placeholderElement: HTMLDivElement;\n  private selectElement: HTMLDivElement;\n  private tooltipElement: HTMLSoulTooltipElement;\n\n  private supportedStatuses = ['warning', 'critical'];\n  private optionHeightObserver: ResizeObserver;\n  private highlightedIndex = -1;\n  private isPopoverVisible: boolean = false;\n  private readonly instanceId = `js-soul-select-${++selectId}-input`;\n  private popoverHelper: PopoverHelper = new PopoverHelper();\n\n  constructor() {\n    this.optionHeightObserver = new ResizeObserver(this.resizePlaceholderElement.bind(this));\n  }\n\n  public componentDidRender(): void {\n    this.optionListElement.addEventListener('toggle', (event: ToggleEvent) => {\n      if (event.newState === 'closed') {\n        this.isPopoverVisible = false;\n        this.popoverHelper.disconnect();\n        this.resetHighlight();\n      }\n    });\n    this.optionHeightObserver.disconnect();\n    this.optionHeightObserver.observe(this.optionCloneElement);\n    this.setPlaceholderElementHeight();\n    this.setActionSlotVisibility();\n    this.setTooltipTriggerElement();\n  }\n\n  public disconnectedCallback() {\n    this.optionHeightObserver.disconnect();\n    this.popoverHelper.disconnect();\n  }\n\n  @Listen('soulOptionChange')\n  public async onOptionChange(event: CustomEvent<SoulOption>): Promise<void> {\n    await this.updateSelectedOptionClone(event.detail);\n  }\n\n  @Listen('soulOptionHover')\n  public onOptionHover(event: CustomEvent<SoulOption>): void {\n    this.resetHighlight();\n    event.detail.highlighted = true;\n    this.highlightedIndex = this.getOptions().findIndex(option => option.highlighted);\n  }\n\n  @Listen('soulOptionClick')\n  public async onSoulClick(event: CustomEvent<SoulOption>): Promise<void> {\n    await this.selectOption(event.detail);\n  }\n\n  @Listen('soulOptionSelectChange')\n  public async onOptionSelectChange(event: CustomEvent<SoulOption>): Promise<void> {\n    const changedOption = event.detail;\n    this.doOnSelectChange(changedOption, changedOption.selected, false);\n  }\n\n  private async doOnSelectChange(option: SoulOption, isSelected: boolean, bubbling: boolean): Promise<void> {\n    if (isSelected) {\n      if (this.stateless) {\n        option.dataSelected = false;\n      } else {\n        this.deselectOtherOptions(option);\n        await this.updateSelectedOptionClone(option);\n      }\n      if (bubbling) {\n        this.soulOptionSelect.emit(option.value);\n      }\n    } else if (this.areAllOptionsDeselected() && !this.stateless) {\n      this.emptyElement(this.selectionElement);\n      if (bubbling) {\n        this.soulOptionSelect.emit(null);\n      }\n    }\n  }\n\n\n  @Watch('disabled')\n  public onDisabledChange() {\n    const selectedElements = this.getOptions().filter(option => option.dataSelected);\n    selectedElements.forEach(selectedElement => this.updateSelectedOptionClone(selectedElement));\n  }\n\n  public async onKeyUp(keyboardEvent: KeyboardEvent): Promise<void> {\n    if (this.searchable && !isKeyboardKeyAction(keyboardEvent)) {\n      await this.setFilterDataAttributes(this.inputElement.value.trim());\n      const matchingOptions = this.getMatchingOptions();\n      this.soulSearch.emit({searchTerm: this.inputElement.value, matches: matchingOptions.length, matchingOptions: matchingOptions});\n      if (!this.isPopoverVisible) {\n        this.togglePopover();\n      }\n      this.highlightNotFilteredOption();\n      this.showEmptyOptionMessage = this.getOptions().every(option => option.hasAttribute(SelectHelper.FILTER_ATTRIBUTE));\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={{\n          'soul-select': true,\n          'soul-select--critical': this.status === 'critical',\n          'soul-select--warning': this.status === 'warning'\n        }}\n             ref={el => this.selectElement = el as HTMLDivElement}>\n          {!this.inputOnly && (isNotEmpty(this.label) || isNotEmpty(this.additionalLabel)) ?\n            <div class=\"soul-select__label\">\n              <label htmlFor={this.instanceId}>{this.label}\n                {isNotEmpty(this.additionalLabel) ?\n                  <span class=\"soul-select__additional-label\">{this.additionalLabel}</span> : ''\n                }\n              </label>\n            </div> : ''\n          }\n          <div class=\"soul-select__control\">\n            {this.renderTooltip()}\n            <input disabled={this.disabled}\n                   onKeyDown={this.onKeyDown.bind(this)}\n                   onKeyUp={this.onKeyUp.bind(this)}\n                   onClick={this.togglePopover.bind(this)}\n                   id={this.instanceId}\n                   type=\"text\"\n                   spellcheck={false}\n                   class=\"soul-select__input\"\n                   readonly={!this.searchable}\n                   pattern=\".+\"\n                   required\n                   ref={el => this.inputElement = el as HTMLInputElement}/>\n            {!this.stateless ? <div class=\"soul-select__selection\" ref={el => this.selectionElement = el as HTMLDivElement}></div> : ''}\n            <div class=\"soul-select__placeholder\" ref={el => this.placeholderElement = el as HTMLDivElement}>\n              {isNotEmpty(this.placeholder) ?\n                <span class=\"soul-label soul-label--reduced\">{this.placeholder}</span> : ''\n              }\n            </div>\n            <div class=\"soul-select__input-icon\">\n              <soul-icon name=\"down\" size=\"s\" color=\"reduced\"></soul-icon>\n            </div>\n          </div>\n          {this.shouldRenderStatusMessage ?\n            <div class=\"soul-select__status-message\">{this.statusMessage}</div> : ''\n          }\n          {!this.inputOnly && isNotEmpty(this.helpText) ?\n            <div class=\"soul-select__help\">{this.helpText}</div> : ''\n          }\n          <div class=\"soul-select__option-clone\" ref={el => this.optionCloneElement = el as HTMLDivElement}></div>\n          <div class=\"soul-select__action\">\n            <slot ref={el => this.actionElement = el as HTMLSlotElement} name=\"action\"></slot>\n          </div>\n        </div>\n        <div class=\"soul-select__options\" {...{'popover': ''}} ref={el => this.optionListElement = el as HTMLPopoverElement}>\n          {this.showEmptyOptionMessage ? <div class=\"soul-select__options-message\"><span class=\"soul-label soul-label--reduced\">{this.noOptionsMessage}</span></div> : ''}\n          <slot ref={el => this.optionsElement = el as HTMLSlotElement} onSlotchange={this.setPlaceholderElementHeight.bind(this)}></slot>\n        </div>\n      </Host>\n    );\n  }\n\n  public get shouldRenderTooltip(): boolean {\n    return this.inputOnly && (this.shouldRenderStatusMessage || isNotEmpty(this.helpText));\n  }\n\n  public get shouldRenderStatusMessage(): boolean {\n    return this.isStatusValid  && isNotEmpty(this.statusMessage);\n  }\n\n  private get isStatusValid(): boolean {\n    return this.supportedStatuses.includes(this.status);\n  }\n\n  private renderTooltip() {\n    return this.shouldRenderTooltip ? (\n      <soul-tooltip text={this.shouldRenderStatusMessage ? this.statusMessage : this.helpText} status={this.status ? this.status : undefined} position={this.tooltipPosition}\n                    ref={el => this.tooltipElement = el as HTMLSoulTooltipElement}></soul-tooltip>) : '';\n  }\n\n  private getMatchingOptions(): HTMLSoulOption[] {\n    return this.getOptions().filter(option => !this.isOptionFiltered(option) && !option.nonFilterable);\n  }\n\n  private highlightNotFilteredOption(): void {\n    const highlightedOption = this.getOptions()[this.highlightedIndex];\n    if (!this.isOptionUsable(highlightedOption)) {\n      this.highlightFirstNotFilteredOption();\n    }\n  }\n\n  private isOptionFiltered(option: HTMLSoulOption): boolean {\n    return option.hasAttribute(SelectHelper.FILTER_ATTRIBUTE);\n  }\n\n  private highlightFirstNotFilteredOption(): void {\n    this.removeCurrentOptionHighlight();\n    const firstVisibleOptionIndex = this.getOptions().findIndex((option) => this.isOptionUsable(option));\n    if (firstVisibleOptionIndex !== -1) {\n      this.highlightOptionByIndex(firstVisibleOptionIndex);\n    }\n  }\n\n  private async setFilterDataAttributes(term: string): Promise<void> {\n    const options = this.getOptions().filter(option => !option.nonFilterable);\n    const allMatchPromises: Promise<void>[] = [];\n    for (const soulOption of options) {\n      if (this.isOptionHidden(soulOption)) {\n        soulOption.setAttribute(SelectHelper.FILTER_ATTRIBUTE, 'true');\n      } else if (this.searchFunction && term !== '') {\n        this.searchFunction(soulOption, term) ?\n          soulOption.removeAttribute(SelectHelper.FILTER_ATTRIBUTE) :\n          soulOption.setAttribute(SelectHelper.FILTER_ATTRIBUTE, 'true');\n      } else {\n        allMatchPromises.push(soulOption.match(this.inputElement.value).then(matches => {\n          matches ? soulOption.removeAttribute(SelectHelper.FILTER_ATTRIBUTE) : soulOption.setAttribute(SelectHelper.FILTER_ATTRIBUTE, 'true');\n        }));\n      }\n    }\n    await Promise.all(allMatchPromises);\n  }\n\n  private async onKeyDown(event: KeyboardEvent): Promise<void> {\n    switch (event.key) {\n      case Keymap.SPACE: {\n        this.onSpaceKeyDown(event);\n        break;\n      }\n      case Keymap.DOWN: {\n        this.openOrElse(() => this.highlightNextOption());\n        event.preventDefault();\n        break;\n      }\n      case Keymap.UP: {\n        this.openOrElse(() => this.highlightPreviousOption());\n        event.preventDefault();\n        break;\n      }\n      case Keymap.ENTER: {\n        this.openOrElse(async () => await this.selectHighlightedOption());\n        break;\n      }\n      case Keymap.ESC: {\n        if (this.isPopoverVisible) {\n          this.togglePopover();\n          await this.resetSearch();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  private async selectOption(option: SoulOption): Promise<void> {\n    await this.resetSearch();\n    this.togglePopover();\n    if (!option.dataSelected) {\n      option.dataSelected = true;\n      await this.doOnSelectChange(option, option.dataSelected, true);\n    }\n  }\n\n  private async resetSearch(): Promise<void> {\n    if (this.searchable) {\n      this.inputElement.value = '';\n      await this.setFilterDataAttributes('');\n      this.showEmptyOptionMessage = false;\n      const matchingOptions = this.getMatchingOptions();\n      this.soulSearch.emit({searchTerm: '', matches: matchingOptions.length, matchingOptions: matchingOptions});\n    }\n  }\n\n  private areAllOptionsDeselected(): boolean {\n    return this.getOptions().every(option => !option.dataSelected);\n  }\n\n  private resetHighlight(): void {\n    this.getOptions().forEach(optionElement => optionElement.highlighted = false);\n  }\n\n  private async updateSelectedOptionClone(option: SoulOption): Promise<void> {\n    const selectedOptionClone = await option.clone();\n    selectedOptionClone.passive = true;\n    selectedOptionClone.selected = false;\n    selectedOptionClone.disabled = this.disabled;\n    this.emptyElement(this.selectionElement);\n    this.selectionElement?.appendChild(selectedOptionClone);\n  }\n\n  private emptyElement(element: HTMLElement): void {\n    while (element?.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  }\n\n  private deselectOtherOptions(exclude: SoulOption): void {\n    this.getOptions().forEach(option => {\n      if (option.instanceId !== exclude.instanceId) {\n        option.dataSelected = false;\n      }\n    });\n  }\n\n  private openOrElse(elseFunction: () => void | Promise<void>): void {\n    if (!this.isPopoverVisible) {\n      this.togglePopover();\n    } else {\n      elseFunction();\n    }\n  }\n\n  private togglePopover(): void {\n    if (this.isPopoverVisible) {\n      this.optionListElement.hidePopover();\n    } else {\n      this.setHighlightedOptionIndex();\n      this.optionListElement.showPopover();\n      this.isPopoverVisible = true;\n      this.popoverHelper.connect(this.inputElement, this.optionListElement, this.maxHeight);\n      this.scrollToHighlightedOption();\n    }\n  }\n\n  private async setPlaceholderElementHeight(): Promise<void> {\n    const firstOption = this.getOptions()[0];\n    if (firstOption) {\n      const clonedOption = await firstOption.clone();\n      this.optionCloneElement.replaceChildren(clonedOption);\n      this.placeholderElement.style.height = `${this.optionCloneElement.getBoundingClientRect().height}px`;\n    }\n  }\n\n  private onSpaceKeyDown(event: KeyboardEvent): void {\n    if (!this.isPopoverVisible) {\n      this.togglePopover();\n    }\n    if (this.disableSpaces) {\n      event.preventDefault();\n    }\n  }\n\n  private setHighlightedOptionIndex(): void {\n    this.highlightedIndex = this.getOptions().findIndex(option => option.dataSelected);\n  }\n\n  private removeCurrentOptionHighlight(): void {\n    const assignedElements = this.getOptions();\n    if (isDefined(assignedElements[this.highlightedIndex])) {\n      assignedElements[this.highlightedIndex].highlighted = false;\n    }\n  }\n\n  private isLastOptionHighlighted(): boolean {\n    return this.highlightedIndex + 1 === this.getOptions().length;\n  }\n\n  private isFirstOptionHighlighted(): boolean {\n    return this.highlightedIndex === 0;\n  }\n\n  private highlightOptionByIndex(index: number): void {\n    this.highlightedIndex = index;\n    const assignedElements = this.getOptions();\n    assignedElements[index].highlighted = true;\n  }\n\n  private highlightPreviousOption(): void {\n    if (!this.isFirstOptionHighlighted()) {\n      const previousIndex = this.getPreviousIndex(this.highlightedIndex);\n      if (previousIndex != this.highlightedIndex) {\n        this.removeCurrentOptionHighlight();\n        this.highlightOptionByIndex(previousIndex);\n        this.scrollUpToOption();\n      }\n    }\n  }\n\n  private highlightNextOption(): void {\n    if (!this.isLastOptionHighlighted()) {\n      const nextIndex = this.getNextIndex(this.highlightedIndex);\n      if (nextIndex != this.highlightedIndex) {\n        this.removeCurrentOptionHighlight();\n        this.highlightOptionByIndex(nextIndex);\n        this.scrollDownToOption();\n      }\n    }\n  }\n\n  private scrollUpToOption(): void {\n    const highlightedOption = this.getOptions()[this.highlightedIndex];\n    if (!this.isHighlightedOptionVisible(highlightedOption)) {\n      highlightedOption.scrollIntoView();\n    }\n  }\n\n  private scrollDownToOption(): void {\n    const highlightedOption = this.getOptions()[this.highlightedIndex];\n    if (!this.isHighlightedOptionVisible(highlightedOption)) {\n      const optionsListHeight = this.optionListElement.offsetHeight;\n      const optionHeight = highlightedOption.offsetHeight;\n      const scrollOffset = this.optionListElement.scrollTop;\n      const topOffset = (this.highlightedIndex * optionHeight) + optionHeight - scrollOffset - optionsListHeight;\n      this.optionListElement.scrollTo({top: topOffset + scrollOffset});\n    }\n  }\n\n  private isHighlightedOptionVisible(option: HTMLSoulOption): boolean {\n    const optionsListHeight = this.optionListElement.offsetHeight;\n    const optionHeight = option.offsetHeight;\n    const scrollOffset = this.optionListElement.scrollTop;\n\n    return (this.highlightedIndex * optionHeight) >= scrollOffset && (this.highlightedIndex * optionHeight) + optionHeight <= scrollOffset + optionsListHeight;\n  }\n\n  private getOptions(): HTMLSoulOption[] {\n    return this.optionsElement.assignedElements().reduce((previousValue, element) => {\n      if (element.tagName === 'SOUL-OPTION-GROUP') {\n        const elementOptions = Array.from(element.children) as HTMLSoulOption[];\n        previousValue.push(...elementOptions);\n      } else {\n        previousValue.push(element as HTMLSoulOption);\n      }\n      return previousValue;\n    }, [] as HTMLSoulOption[]);\n  }\n\n  private async selectHighlightedOption(): Promise<void> {\n    const assignedElements = this.getOptions();\n    const optionToSelect = assignedElements[this.highlightedIndex];\n    if (this.isOptionUsable(optionToSelect)) {\n      await this.selectOption(optionToSelect);\n    }\n  }\n\n  private scrollToHighlightedOption(): void {\n    setTimeout(() => {\n      const selectedOption = this.getOptions()[this.highlightedIndex];\n      if (selectedOption && !this.isHighlightedOptionVisible(selectedOption)) {\n        selectedOption.scrollIntoView();\n      }\n    }, 0);\n  }\n\n  private getPreviousIndex(index: number): number {\n    const previousIndex = index - 1;\n    if (previousIndex >= 0) {\n      const previousIndexOption = this.getOptions()[previousIndex];\n      return this.isOptionUsable(previousIndexOption) ? previousIndex : this.getPreviousIndex(previousIndex);\n    }\n    return this.highlightedIndex;\n  }\n\n  private getNextIndex(index: number): number {\n    const nextIndex = index + 1;\n    if (nextIndex < this.getOptions().length) {\n      const nextIndexOption = this.getOptions()[nextIndex];\n      return this.isOptionUsable(nextIndexOption) ? nextIndex : this.getNextIndex(nextIndex);\n    }\n    return this.highlightedIndex;\n  }\n\n  private setActionSlotVisibility(): void {\n    if (!this.inputOnly && this.actionElement.assignedElements().length > 0) {\n      this.selectElement.style.setProperty('--_soul-select-action-display', 'block');\n    } else {\n      this.selectElement.style.setProperty('--_soul-select-action-display', 'none');\n    }\n  }\n\n  private resizePlaceholderElement(entries: ResizeObserverEntry[]): void {\n    this.placeholderElement.style.height = `${entries[0].contentRect.height}px`;\n  }\n\n  private isOptionDisabled(option: HTMLSoulOption): boolean {\n    return option.disabled || option.hasAttribute(SelectHelper.GROUP_DISABLED_ATTRIBUTE);\n  }\n\n  private isOptionHidden(option: HTMLSoulOption): boolean {\n    return option.hidden || option.hasAttribute(SelectHelper.GROUP_HIDDEN_ATTRIBUTE);\n  }\n\n  private isOptionUsable(option: HTMLSoulOption): boolean {\n    return !(isUndefined(option) || this.isOptionDisabled(option) || this.isOptionHidden(option) || this.isOptionFiltered(option));\n  }\n\n  private setTooltipTriggerElement(): void {\n    if (isDefined(this.tooltipElement)) {\n      this.tooltipElement.triggerElement = this.inputElement;\n    }\n\n  }\n}\n\nlet selectId = 0;\n\ninterface HTMLPopoverElement extends HTMLDivElement {\n  showPopover: () => void;\n  hidePopover: () => void;\n  togglePopover: () => void;\n}\n\ntype HTMLSoulOption = HTMLSoulTextOptionElement | HTMLSoulAvatarOptionElement;\ntype SoulOption = SoulTextOption | SoulAvatarOption;\n\ntype SoulSelectSearchEvent = { searchTerm: string, matches: number, matchingOptions: HTMLSoulOption[] };\n\ninterface ToggleEvent extends Event {\n  newState: 'open' | 'closed';\n  oldState: 'open' | 'closed';\n}\n"],"mappings":"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"}
{"version":3,"names":["soulSkeletonThumbnailCss","SoulSkeletonThumbnail","this","supportedSizes","sizeChange","newValue","validateSize","includes","console","debug","join","render","h","Host","class","shape"],"sources":["./src/components/soul-skeleton-thumbnail/soul-skeleton-thumbnail.scss?tag=soul-skeleton-thumbnail&encapsulation=shadow","./src/components/soul-skeleton-thumbnail/soul-skeleton-thumbnail.tsx"],"sourcesContent":["@use \"modules/core\";\n@use \"modules/components/soul-skeleton\";\n\n:host {\n  --_soul-thumbnail-size: #{core.$soul-space-unit-xl};\n  display: block;\n  width: var(--_soul-thumbnail-size);\n  height: var(--_soul-thumbnail-size);\n}\n\n:host([size=\"s\"]) {\n  --_soul-thumbnail-size: #{core.$soul-space-unit-m};\n}\n\n:host([size=\"m\"]) {\n  --_soul-thumbnail-size: #{core.$soul-space-unit-xl};\n}\n\n\n:host([size=\"l\"]) {\n  --_soul-thumbnail-size: #{core.$soul-space-unit-2-xl};\n}\n\n:host([size=\"xl\"]) {\n  --_soul-thumbnail-size: #{2 * core.$soul-space-unit-2-xl};\n}\n\n.soul-skeleton-thumbnail {\n  @include soul-skeleton.soul-skeleton-element();\n\n  width: 100%;\n  height: 100%;\n  background-color: core.$soul-color-illustration-base;\n}\n\n.soul-skeleton-thumbnail--square {\n  border-radius: core.$soul-border-radius-m;\n}\n\n.soul-skeleton-thumbnail--circle {\n  border-radius: core.$soul-border-radius-circle;\n}\n\n@media screen and (prefers-reduced-motion: no-preference) {\n  .soul-skeleton-thumbnail {\n    @include soul-skeleton.soul-skeleton-shimmer-animation();\n  }\n}\n","import {Component, Element, h, Host, Prop} from '@stencil/core';\nimport {HostElement, Watch} from '@stencil/core/internal';\n\n@Component({\n  tag: 'soul-skeleton-thumbnail',\n  styleUrl: 'soul-skeleton-thumbnail.scss',\n  shadow: true,\n})\nexport class SoulSkeletonThumbnail {\n  @Prop({reflect: true}) size: 's' | 'm' | 'l' | 'xl' = 'm';\n  @Prop({reflect: true}) shape: 'circle' | 'square' = 'square';\n  @Element() hostElement: HostElement;\n\n  private supportedSizes = ['s', 'm', 'l', 'xl'];\n\n  @Watch('size')\n  public sizeChange(newValue: string): void {\n    this.validateSize(newValue);\n  }\n\n  private validateSize(newValue: string): void {\n    if (!this.supportedSizes.includes(newValue)) {\n      console.debug(`Size ${newValue} not supported. Supported sizes: ${this.supportedSizes.join(', ')}`);\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={`soul-skeleton-thumbnail ${this.shape === 'circle' ? 'soul-skeleton-thumbnail--circle' : 'soul-skeleton-thumbnail--square'}`}></div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"yDAAA,MAAMA,EAA2B,ojD,MCQpBC,EAAqB,M,yBAKxBC,KAAAC,eAAiB,CAAC,IAAK,IAAK,IAAK,M,UAJa,I,WACF,Q,CAM7CC,WAAWC,GAChBH,KAAKI,aAAaD,E,CAGZC,aAAaD,GACnB,IAAKH,KAAKC,eAAeI,SAASF,GAAW,CAC3CG,QAAQC,MAAM,QAAQJ,qCAA4CH,KAAKC,eAAeO,KAAK,Q,EAI/FC,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,2BAA2BZ,KAAKa,QAAU,SAAW,kCAAoC,sC"}
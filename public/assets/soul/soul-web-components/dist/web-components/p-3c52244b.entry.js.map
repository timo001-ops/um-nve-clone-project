{"version":3,"names":["soulIconCss","SoulIcon","this","supportedSizes","supportedColors","sizeHelper","SizeHelper","nameChange","setIconUrl","sizeChange","newValue","validateSize","colorChange","validateColors","render","h","Host","class","style","iconUrl","componentWillLoad","assetsFolder","getAssetsFolder","hostElement","nameTrimmed","_a","name","trim","iconStackUrl","isNotEmpty","color","includes","console","debug","join"],"sources":["./src/components/soul-icon/soul-icon.scss?tag=soul-icon&encapsulation=shadow","./src/components/soul-icon/soul-icon.tsx"],"sourcesContent":["@use \"modules/core\";\n\n$_icon-sizes: (\n  core.$soul-2-xs,\n  core.$soul-xs,\n  core.$soul-s,\n  core.$soul-m,\n  core.$soul-l,\n  core.$soul-xl,\n  core.$soul-2-xl,\n  core.$soul-3-xl\n);\n\n@each $size in $_icon-sizes {\n  :host([size=\"#{$size}\"]) {\n    --soul-icon-size: #{core.get-font-size($size)};\n  }\n}\n\n@mixin _soul-icon() {\n  content: '';\n  mask-image: var(--_soul-icon-url);\n  background: var(--soul-icon-color);\n  mask-repeat: no-repeat;\n  mask-position: center;\n  display: block;\n  width: var(--soul-icon-size);\n  height: var(--soul-icon-size);\n}\n\n:host {\n  --soul-icon-color: currentColor;\n  --soul-icon-size: #{core.get-font-size(core.$soul-s)};\n}\n\n:host,\n.soul-icon__icon {\n  width: var(--soul-icon-size);\n  height: var(--soul-icon-size);\n}\n\n.soul-icon__icon {\n  --_soul-icon-name: '';\n\n  &:before {\n    @include _soul-icon();\n  }\n}\n\n:host([inline]),\n:host([inline=\"true\"]) {\n  display: inline-block;\n}\n\n:host,\n:host([inline=\"false\"]),\n.soul-icon__icon {\n  display: flex;\n}\n\n:host([color=\"reduced\"]) {\n  --soul-icon-color: #{core.$soul-color-icon-reduced};\n}\n\n:host([color=\"secondary\"]) {\n  --soul-icon-color: #{core.$soul-color-icon-secondary};\n}\n\n:host([color=\"primary\"]) {\n  --soul-icon-color: #{core.$soul-color-icon-primary};\n}\n\n","import {Component, ComponentWillLoad, Element, h, Host, Prop, Watch} from '@stencil/core';\nimport {HostElement} from '@stencil/core/internal';\nimport {getAssetsFolder} from '../../services/AssetsFolderHelper';\nimport {isNotEmpty} from '../../utils/utils';\nimport {SizeHelper} from '../../services/SizeHelper';\n\n@Component({\n  tag: 'soul-icon',\n  styleUrl: 'soul-icon.scss',\n  shadow: true,\n})\nexport class SoulIcon implements ComponentWillLoad {\n\n  @Prop({reflect: true}) name: string;\n  @Prop({reflect: true}) size: '2-xs' | 'xs' | 's' | 'm' | 'l' | 'xl' | '2-xl' | '3-xl' = 's';\n  @Prop({reflect: true}) inline: boolean = false;\n  @Prop({reflect: true}) color: 'primary' | 'secondary' | 'reduced';\n  @Prop({reflect: true}) iconStackUrl: string;\n  @Element() hostElement: HostElement;\n\n  private supportedSizes = ['2-xs', 'xs', 's', 'm', 'l', 'xl', '2-xl', '3-xl'];\n  private supportedColors = ['primary', 'secondary', 'reduced'];\n\n  private sizeHelper= new SizeHelper();\n  private assetsFolder: string;\n  private iconUrl: string;\n\n  @Watch('name')\n  public nameChange(): void {\n    this.setIconUrl();\n  }\n\n  @Watch('size')\n  public sizeChange(newValue: string): void {\n    this.sizeHelper.validateSize(this.supportedSizes, newValue);\n  }\n\n  @Watch('color')\n  public colorChange(newValue: string): void {\n    this.validateColors(newValue);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class='soul-icon__icon' style={{'--_soul-icon-url': this.iconUrl}}></div>\n      </Host>\n    );\n  }\n\n  componentWillLoad(): Promise<void> | void {\n    this.assetsFolder = getAssetsFolder(this.hostElement);\n    this.setIconUrl();\n  }\n\n  private setIconUrl(): void {\n    const nameTrimmed = this.name?.trim();\n    this.iconUrl = this.iconStackUrl ? `url(${this.iconStackUrl}#${nameTrimmed})` : `url(${this.assetsFolder}/sprite/core-icons.stack.svg#${nameTrimmed})`;\n  }\n\n  private validateColors(newValue: string): void {\n    if (isNotEmpty(this.color) && !this.supportedColors.includes(newValue)) {\n      console.debug(`Color ${newValue} not supported. Supported colors: ${this.supportedColors.join(', ')}. You can use --soul-icon-color to customize icon color.`);\n    }\n  }\n\n}\n"],"mappings":"qKAAA,MAAMA,EAAc,6rD,MCWPC,EAAQ,M,yBASXC,KAAAC,eAAiB,CAAC,OAAQ,KAAM,IAAK,IAAK,IAAK,KAAM,OAAQ,QAC7DD,KAAAE,gBAAkB,CAAC,UAAW,YAAa,WAE3CF,KAAAG,WAAY,IAAIC,E,8BATgE,I,YAC/C,M,iDAalCC,aACLL,KAAKM,Y,CAIAC,WAAWC,GAChBR,KAAKG,WAAWM,aAAaT,KAAKC,eAAgBO,E,CAI7CE,YAAYF,GACjBR,KAAKW,eAAeH,E,CAGtBI,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,kBAAkBC,MAAO,CAAC,mBAAoBhB,KAAKiB,W,CAKpEC,oBACElB,KAAKmB,aAAeC,EAAgBpB,KAAKqB,aACzCrB,KAAKM,Y,CAGCA,a,MACN,MAAMgB,GAAcC,EAAAvB,KAAKwB,QAAI,MAAAD,SAAA,SAAAA,EAAEE,OAC/BzB,KAAKiB,QAAUjB,KAAK0B,aAAe,OAAO1B,KAAK0B,gBAAgBJ,KAAiB,OAAOtB,KAAKmB,4CAA4CG,I,CAGlIX,eAAeH,GACrB,GAAImB,EAAW3B,KAAK4B,SAAW5B,KAAKE,gBAAgB2B,SAASrB,GAAW,CACtEsB,QAAQC,MAAM,SAASvB,sCAA6CR,KAAKE,gBAAgB8B,KAAK,gE"}
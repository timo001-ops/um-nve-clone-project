{"version":3,"names":["soulAvatarOptionCss","SoulAvatarOption","constructor","hostRef","avatarOptionId","this","observer","MutationObserver","mutations","mutation","type","attributeName","SelectHelper","GROUP_DISABLED_ATTRIBUTE","onDisabledChange","componentDidLoad","optionHelper","OptionHelper","onChange","bind","infoSlot","avatarSlot","selected","onSelectedChange","componentDidRender","disconnect","observe","hostElement","attributes","disconnectedCallback","_a","clone","clonedElement","document","createElement","passive","clonedSlotContents","cloneSlotsContent","append","Promise","resolve","async","term","assignedElements","some","avatar","name","toLowerCase","includes","_b","additionalText","forEach","muted","disabled","hasAttribute","dataSelected","onSelectChange","soulOptionSelectChange","emit","render","h","Host","ref","el","class","onMouseMove","throttle","onMouseDown","event","soulOptionChange","isOptionDisabled","soulOptionHover","preventDefault","stopPropagation","soulOptionClick"],"sources":["./src/components/soul-avatar-option/soul-avatar-option.scss?tag=soul-avatar-option&encapsulation=shadow","./src/components/soul-avatar-option/soul-avatar-option.tsx"],"sourcesContent":["@use \"modules/components/grid\";\n@use \"modules/components/label\";\n@use \"modules/essentials/helpers/text\";\n@use \"modules/core\";\n\n:host {\n  display: block;\n  cursor: pointer;\n  padding: core.$soul-space-squish-2-xs;\n}\n\n:host([highlighted]:not([highlighted=\"false\"])) {\n  .soul-avatar-option {\n    background-color: core.$soul-color-background-hover-on-light;\n  }\n}\n\n:host([data-selected]:not([data-selected=\"false\"])) {\n  .soul-avatar-option {\n    background-color: core.$soul-color-background-active;\n  }\n}\n\n:host([data-filtered]),\n:host([data-group-hidden]:not([data-group-hidden=\"false\"])),\n:host([hidden]:not([hidden=\"false\"])) {\n  display: none;\n}\n\n:host([data-group-disabled]:not([data-group-disabled=\"false\"])),\n:host([disabled]:not([disabled=\"false\"])) {\n  opacity: core.$opacity-l;\n  cursor: not-allowed;\n}\n\n.soul-avatar-option {\n  padding: core.$soul-space-inset-xs;\n  border-radius: core.$soul-border-radius-m;\n}\n","import {Component, ComponentInterface, Event, EventEmitter, h, Host, Method, Prop, Watch} from '@stencil/core';\nimport {OptionHelper} from '../../services/OptionHelper';\nimport {throttle} from '../../utils/Throttle';\nimport {SelectHelper} from '../../services/SelectHelper';\n\n@Component({\n  tag: 'soul-avatar-option',\n  styleUrl: 'soul-avatar-option.scss',\n  shadow: true\n})\nexport class SoulAvatarOption implements ComponentInterface {\n\n  @Prop({reflect: true}) public disabled = false;\n  @Prop({reflect: true}) public hidden = false;\n  @Prop({reflect: true}) public highlighted = false;\n  @Prop({reflect: true}) public passive = false;\n  @Prop({reflect: true}) public selected = false;\n  @Prop({reflect: true}) public dataSelected = false;\n  @Prop({reflect: true}) public nonFilterable = false;\n  @Prop({reflect: false, mutable: false}) public readonly instanceId = `js-soul-avatar-option-${++avatarOptionId}`;\n  @Prop() public value: any;\n\n  @Event() public soulOptionChange: EventEmitter<SoulAvatarOption>;\n  @Event() public soulOptionClick: EventEmitter<SoulAvatarOption>;\n  @Event() public soulOptionHover: EventEmitter<SoulAvatarOption>;\n  @Event() public soulOptionSelectChange: EventEmitter<SoulAvatarOption>;\n\n  private avatarSlot: HTMLSlotElement;\n  private infoSlot: HTMLSlotElement;\n  private optionHelper: OptionHelper;\n  private hostElement: HTMLElement;\n  private observer: MutationObserver;\n\n  constructor() {\n    this.observer = new MutationObserver((mutations) => {\n      for (const mutation of mutations) {\n        if (mutation.type === 'attributes' && mutation.attributeName === SelectHelper.GROUP_DISABLED_ATTRIBUTE) {\n          this.onDisabledChange();\n        }\n      }\n    });\n  }\n\n  public componentDidLoad() {\n    this.optionHelper = new OptionHelper(this.onChange.bind(this), [this.infoSlot, this.avatarSlot]);\n    if (this.selected) {\n      this.onSelectedChange();\n    }\n    this.onDisabledChange();\n  }\n\n  public componentDidRender() {\n    this.observer.disconnect();\n    this.observer.observe(this.hostElement, {attributes: true});\n  }\n\n  public disconnectedCallback() {\n    this.optionHelper?.disconnect();\n    this.observer.disconnect();\n  }\n\n  @Method()\n  public clone(): Promise<HTMLSoulAvatarOptionElement> {\n    const clonedElement = document.createElement('soul-avatar-option');\n    clonedElement.passive = true;\n    const clonedSlotContents: Element[] = this.optionHelper.cloneSlotsContent();\n    clonedElement.append(...clonedSlotContents);\n    return Promise.resolve(clonedElement);\n  }\n\n  @Method()\n  public async match(term: string): Promise<boolean> {\n    return this.avatarSlot.assignedElements().some((avatar) => {\n      return (avatar as HTMLSoulAvatarElement).name?.toLowerCase().includes(term.toLowerCase()) ||\n        (avatar as HTMLSoulAvatarElement).additionalText?.toLowerCase().includes(term.toLowerCase());\n    });\n  }\n\n  @Watch('disabled')\n  public onDisabledChange(): void {\n    if (this.optionHelper) {\n      this.avatarSlot.assignedElements().forEach((avatar) => {\n        (avatar as HTMLSoulAvatarElement).muted = this.disabled || this.hostElement.hasAttribute(SelectHelper.GROUP_DISABLED_ATTRIBUTE);\n      });\n    }\n  }\n\n  @Watch('selected')\n  public onSelectedChange(): void {\n    if (this.optionHelper && !this.passive) {\n      this.dataSelected = this.selected;\n      this.optionHelper.onSelectChange(this.selected);\n      this.soulOptionSelectChange.emit(this);\n    }\n  }\n\n  render() {\n    return (\n      <Host ref={el => this.hostElement = el as HTMLElement}>\n        <div class=\"soul-avatar-option\" onMouseMove={throttle(this.onMouseMove.bind(this), 1000)} onMouseDown={(event) => this.onMouseDown(event)}>\n          <div class=\"soul-grid soul-grid--horizontal soul-grid--align-center soul-grid--compact-gap\">\n            <div class=\"soul-grid-item-fill-span\">\n              <slot ref={el => this.avatarSlot = el as HTMLSlotElement} name=\"avatar\"></slot>\n            </div>\n            <div class=\"soul-grid-item-auto-span\">\n              <slot ref={el => this.infoSlot = el as HTMLSlotElement} name=\"info\"></slot>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  private onChange(): void {\n    if (this.dataSelected && !this.passive) {\n      this.soulOptionChange.emit(this);\n    }\n  }\n\n  private onMouseMove(): void {\n    if (!this.passive && !this.isOptionDisabled()) {\n      this.soulOptionHover.emit(this);\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.passive) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (!this.isOptionDisabled()) {\n        this.soulOptionClick.emit(this);\n      }\n    }\n  }\n\n  private isOptionDisabled(): boolean {\n    return this.disabled || this.hostElement.hasAttribute(SelectHelper.GROUP_DISABLED_ATTRIBUTE);\n  }\n}\n\nlet avatarOptionId = 0;\n"],"mappings":"wIAAA,MAAMA,EAAsB,64iH,MCUfC,EAAgB,MAuB3BC,YAAAC,G,4OArByC,M,YACF,M,iBACK,M,aACJ,M,cACC,M,kBACI,M,mBACC,M,gBACuB,2BAA2BC,I,qBAe9FC,KAAKC,SAAW,IAAIC,kBAAkBC,IACpC,IAAK,MAAMC,KAAYD,EAAW,CAChC,GAAIC,EAASC,OAAS,cAAgBD,EAASE,gBAAkBC,EAAaC,yBAA0B,CACtGR,KAAKS,kB,MAMNC,mBACLV,KAAKW,aAAe,IAAIC,EAAaZ,KAAKa,SAASC,KAAKd,MAAO,CAACA,KAAKe,SAAUf,KAAKgB,aACpF,GAAIhB,KAAKiB,SAAU,CACjBjB,KAAKkB,kB,CAEPlB,KAAKS,kB,CAGAU,qBACLnB,KAAKC,SAASmB,aACdpB,KAAKC,SAASoB,QAAQrB,KAAKsB,YAAa,CAACC,WAAY,M,CAGhDC,uB,OACLC,EAAAzB,KAAKW,gBAAY,MAAAc,SAAA,SAAAA,EAAEL,aACnBpB,KAAKC,SAASmB,Y,CAITM,QACL,MAAMC,EAAgBC,SAASC,cAAc,sBAC7CF,EAAcG,QAAU,KACxB,MAAMC,EAAgC/B,KAAKW,aAAaqB,oBACxDL,EAAcM,UAAUF,GACxB,OAAOG,QAAQC,QAAQR,E,CAIlBS,YAAYC,GACjB,OAAOrC,KAAKgB,WAAWsB,mBAAmBC,MAAMC,I,QAC9C,QAAOf,EAACe,EAAiCC,QAAI,MAAAhB,SAAA,SAAAA,EAAEiB,cAAcC,SAASN,EAAKK,mBACzEE,EAACJ,EAAiCK,kBAAc,MAAAD,SAAA,SAAAA,EAAEF,cAAcC,SAASN,EAAKK,eAAc,G,CAK3FjC,mBACL,GAAIT,KAAKW,aAAc,CACrBX,KAAKgB,WAAWsB,mBAAmBQ,SAASN,IACzCA,EAAiCO,MAAQ/C,KAAKgD,UAAYhD,KAAKsB,YAAY2B,aAAa1C,EAAaC,yBAAyB,G,EAM9HU,mBACL,GAAIlB,KAAKW,eAAiBX,KAAK8B,QAAS,CACtC9B,KAAKkD,aAAelD,KAAKiB,SACzBjB,KAAKW,aAAawC,eAAenD,KAAKiB,UACtCjB,KAAKoD,uBAAuBC,KAAKrD,K,EAIrCsD,SACE,OACEC,EAACC,EAAI,CAACC,IAAKC,GAAM1D,KAAKsB,YAAcoC,GAClCH,EAAA,OAAKI,MAAM,qBAAqBC,YAAaC,EAAS7D,KAAK4D,YAAY9C,KAAKd,MAAO,KAAO8D,YAAcC,GAAU/D,KAAK8D,YAAYC,IACjIR,EAAA,OAAKI,MAAM,kFACTJ,EAAA,OAAKI,MAAM,4BACTJ,EAAA,QAAME,IAAKC,GAAM1D,KAAKgB,WAAa0C,EAAuBjB,KAAK,YAEjEc,EAAA,OAAKI,MAAM,4BACTJ,EAAA,QAAME,IAAKC,GAAM1D,KAAKe,SAAW2C,EAAuBjB,KAAK,Y,CAQjE5B,WACN,GAAIb,KAAKkD,eAAiBlD,KAAK8B,QAAS,CACtC9B,KAAKgE,iBAAiBX,KAAKrD,K,EAIvB4D,cACN,IAAK5D,KAAK8B,UAAY9B,KAAKiE,mBAAoB,CAC7CjE,KAAKkE,gBAAgBb,KAAKrD,K,EAItB8D,YAAYC,GAClB,IAAK/D,KAAK8B,QAAS,CACjBiC,EAAMI,iBACNJ,EAAMK,kBACN,IAAKpE,KAAKiE,mBAAoB,CAC5BjE,KAAKqE,gBAAgBhB,KAAKrD,K,GAKxBiE,mBACN,OAAOjE,KAAKgD,UAAYhD,KAAKsB,YAAY2B,aAAa1C,EAAaC,yB,6FAIvE,IAAIT,EAAiB,E"}
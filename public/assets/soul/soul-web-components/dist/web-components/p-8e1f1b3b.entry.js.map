{"version":3,"names":["soulProgressRingCss","SoulProgressRing","this","supportedStatuses","supportedSizes","progressHelper","ProgressHelper","statusHelper","StatusHelper","sizeHelper","SizeHelper","range","min","max","radiusBySize","s","m","l","DEFAULT_SIZE","componentWillLoad","getRange","rangeValueChange","statusChange","newValue","validateStatus","sizeChange","validateSize","render","progressPercentage","getProgressPercentage","progress","label","getLabel","indeterminate","accessibilityLabel","getAccessibilityLabel","isDefined","size","isValidSize","h","Host","role","title","hideLabel","class","status","width","height","cx","cy","r","hasLabel","isValidStatus","type","border","isNotEmpty"],"sources":["./src/components/soul-progress-ring/soul-progress-ring.scss?tag=soul-progress-ring&encapsulation=shadow","./src/components/soul-progress-ring/soul-progress-ring.tsx"],"sourcesContent":["@use \"modules/core\";\n@use 'modules/essentials/helpers';\n@use 'modules/components/label';\n@use \"modules/components/progress-ring\";\n\n$_indicator-position: (\"bottom\": 20%, \"right\": 14%);\n$_indicator_size: 40%;\n\n:host {\n  display: block;\n}\n\n\n:host,\n:host([color='neutral']) {\n  --soul-progress-ring-fill-color: #{core.$soul-color-background-interactive-default-selected};\n}\n\n:host([color='primary']) {\n  --soul-progress-ring-fill-color: #{core.$soul-color-background-status-brand-primary};\n}\n\n.soul-progress-ring--warning {\n  --soul-progress-bar-fill-color: #{core.$soul-color-background-status-warning};\n  color: core.$soul-color-text-indicator-warning;\n}\n\n.soul-progress-ring--critical {\n  --soul-progress-bar-fill-color: #{core.$soul-color-background-status-critical};\n  color: core.$soul-color-text-indicator-negative;\n}\n\n.soul-progress-ring--positive {\n  --soul-progress-bar-fill-color: #{core.$soul-color-background-status-positive};\n  color: core.$soul-color-text-indicator-positive;\n}\n\n.soul-progress-ring__indicator {\n  position: absolute;\n  bottom: map-get($_indicator-position, \"bottom\");\n  right: map-get($_indicator-position, \"right\");\n  transform: translate(50%, 50%);\n  width: var(--_soul-progress-ring-indicator-size, $_indicator_size);\n  height: var(--_soul-progress-ring-indicator-size, $_indicator_size);\n}\n\n:host([size='s']) {\n  --_soul-progress-ring-indicator-size: 70%;\n}\n\nsoul-indicator {\n  --soul-indicator-size: 100%;\n}\n\n.soul-progress-ring__content {\n  overflow: hidden;\n}\n","import {Component, Host, h, Prop, Watch, ComponentWillLoad} from '@stencil/core';\nimport {isDefined, isNotEmpty} from '../../utils/utils';\nimport {ProgressHelper, ProgressRange} from '../../services/ProgressHelper';\nimport {StatusHelper} from '../../services/StatusHelper';\nimport {SizeHelper} from '../../services/SizeHelper';\n\n@Component({\n  tag: 'soul-progress-ring',\n  styleUrl: 'soul-progress-ring.scss',\n  shadow: true,\n})\nexport class SoulProgressRing implements ComponentWillLoad {\n\n  @Prop({reflect: true}) size: 's' | 'm' | 'l' = 'm';\n  @Prop({reflect: true}) indeterminate: boolean = false;\n  @Prop({reflect: true}) progress = 0;\n  @Prop({reflect: true}) min = 0;\n  @Prop({reflect: true}) max = 100;\n  @Prop({reflect: true}) label: string;\n  @Prop({reflect: true}) accessibilityLabel: string;\n  @Prop({reflect: true}) hideLabel: boolean = false;\n  @Prop({reflect: true}) status: 'warning' | 'positive' | 'critical';\n  @Prop({reflect: true}) color: 'neutral' | 'primary' = 'neutral';\n  private supportedStatuses = ['positive', 'warning', 'critical'];\n  private supportedSizes = ['s', 'm', 'l'];\n  private progressHelper = new ProgressHelper();\n  private statusHelper = new StatusHelper();\n  private sizeHelper = new SizeHelper();\n  private range: ProgressRange = {min: 0, max: 100};\n  private radiusBySize: RadiusBySize = {s: '44%', m: '45%', l: '47%'};\n  private readonly DEFAULT_SIZE = 'm';\n\n\n  componentWillLoad(): Promise<void> | void {\n    this.range = this.progressHelper.getRange(this.min, this.max);\n  }\n\n  @Watch('min')\n  @Watch('max')\n  rangeValueChange(): void {\n    this.range = this.progressHelper.getRange(this.min, this.max);\n  }\n\n  @Watch('status')\n  public statusChange(newValue: string): void {\n    this.statusHelper.validateStatus(this.supportedStatuses, newValue);\n  }\n\n  @Watch('size')\n  public sizeChange(newValue: string): void {\n    this.sizeHelper.validateSize(this.supportedSizes, newValue);\n  }\n\n  render() {\n    const progressPercentage = this.progressHelper.getProgressPercentage(this.range, this.progress);\n    const label = this.progressHelper.getLabel(this.label, this.indeterminate, progressPercentage);\n    const accessibilityLabel = this.progressHelper.getAccessibilityLabel(this.accessibilityLabel, label);\n    const radiusBySize = isDefined(this.size) && this.sizeHelper.isValidSize(this.supportedSizes, this.size) ? this.radiusBySize[this.size] : this.radiusBySize[this.DEFAULT_SIZE];\n    return (\n      <Host role='progressbar' aria-valuemin={this.min} aria-valuemax={this.max} aria-valuenow={this.progress} aria-label={accessibilityLabel}\n            title={this.hideLabel ? (accessibilityLabel ? accessibilityLabel : label) : ''}>\n        <div class={{\n          'soul-progress-ring': true,\n          [this.indeterminate ? 'soul-progress-ring--indeterminate' : `soul-progress-ring--progress-${progressPercentage}`]: true,\n          [isDefined(this.size) && this.sizeHelper.isValidSize(this.supportedSizes, this.size) ? `soul-progress-ring--${this.size}` : 'soul-progress-ring--m']: true,\n          'soul-progress-ring--critical': this.status === 'critical',\n          'soul-progress-ring--warning': this.status === 'warning',\n          'soul-progress-ring--positive': this.status === 'positive'\n        }}>\n          <svg class=' soul-progress-ring__circles' width='100%' height='100%'>\n            <circle class='soul-progress-ring__track' cx='50%' cy='50%' r={radiusBySize}/>\n            <circle class='soul-progress-ring__fill' cx='50%' cy='50%' r={radiusBySize}/>\n          </svg>\n          {this.hasLabel(label) ? <span class='soul-progress-ring__content'>{label}</span> : ''}\n          {isDefined(this.status) && this.statusHelper.isValidStatus(this.supportedStatuses, this.status) ? <div class='soul-progress-ring__indicator'>\n            <soul-indicator type={this.status} border></soul-indicator>\n          </div> : ''\n          }\n        </div>\n      </Host>\n    );\n  }\n\n  private hasLabel(label: string): boolean {\n    return !this.hideLabel && isNotEmpty(label);\n  }\n\n\n}\n\ntype RadiusBySize = { l: string, s: string, m: string };\n"],"mappings":"yMAAA,MAAMA,EAAsB,uo7B,MCWfC,EAAgB,M,yBAYnBC,KAAAC,kBAAoB,CAAC,WAAY,UAAW,YAC5CD,KAAAE,eAAiB,CAAC,IAAK,IAAK,KAC5BF,KAAAG,eAAiB,IAAIC,EACrBJ,KAAAK,aAAe,IAAIC,EACnBN,KAAAO,WAAa,IAAIC,EACjBR,KAAAS,MAAuB,CAACC,IAAK,EAAGC,IAAK,KACrCX,KAAAY,aAA6B,CAACC,EAAG,MAAOC,EAAG,MAAOC,EAAG,OAC5Cf,KAAAgB,aAAe,I,UAjBe,I,mBACC,M,cACd,E,SACL,E,SACA,I,sEAGe,M,iCAEU,S,CAWtDC,oBACEjB,KAAKS,MAAQT,KAAKG,eAAee,SAASlB,KAAKU,IAAKV,KAAKW,I,CAK3DQ,mBACEnB,KAAKS,MAAQT,KAAKG,eAAee,SAASlB,KAAKU,IAAKV,KAAKW,I,CAIpDS,aAAaC,GAClBrB,KAAKK,aAAaiB,eAAetB,KAAKC,kBAAmBoB,E,CAIpDE,WAAWF,GAChBrB,KAAKO,WAAWiB,aAAaxB,KAAKE,eAAgBmB,E,CAGpDI,SACE,MAAMC,EAAqB1B,KAAKG,eAAewB,sBAAsB3B,KAAKS,MAAOT,KAAK4B,UACtF,MAAMC,EAAQ7B,KAAKG,eAAe2B,SAAS9B,KAAK6B,MAAO7B,KAAK+B,cAAeL,GAC3E,MAAMM,EAAqBhC,KAAKG,eAAe8B,sBAAsBjC,KAAKgC,mBAAoBH,GAC9F,MAAMjB,EAAesB,EAAUlC,KAAKmC,OAASnC,KAAKO,WAAW6B,YAAYpC,KAAKE,eAAgBF,KAAKmC,MAAQnC,KAAKY,aAAaZ,KAAKmC,MAAQnC,KAAKY,aAAaZ,KAAKgB,cACjK,OACEqB,EAACC,EAAI,CAACC,KAAK,cAAa,gBAAgBvC,KAAKU,IAAG,gBAAiBV,KAAKW,IAAG,gBAAiBX,KAAK4B,SAAQ,aAAcI,EAC/GQ,MAAOxC,KAAKyC,UAAaT,EAAqBA,EAAqBH,EAAS,IAChFQ,EAAA,OAAKK,MAAO,CACV,qBAAsB,KACtB,CAAC1C,KAAK+B,cAAgB,oCAAsC,gCAAgCL,KAAuB,KACnH,CAACQ,EAAUlC,KAAKmC,OAASnC,KAAKO,WAAW6B,YAAYpC,KAAKE,eAAgBF,KAAKmC,MAAQ,uBAAuBnC,KAAKmC,OAAS,yBAA0B,KACtJ,+BAAgCnC,KAAK2C,SAAW,WAChD,8BAA+B3C,KAAK2C,SAAW,UAC/C,+BAAgC3C,KAAK2C,SAAW,aAEhDN,EAAA,OAAKK,MAAM,+BAA+BE,MAAM,OAAOC,OAAO,QAC5DR,EAAA,UAAQK,MAAM,4BAA4BI,GAAG,MAAMC,GAAG,MAAMC,EAAGpC,IAC/DyB,EAAA,UAAQK,MAAM,2BAA2BI,GAAG,MAAMC,GAAG,MAAMC,EAAGpC,KAE/DZ,KAAKiD,SAASpB,GAASQ,EAAA,QAAMK,MAAM,+BAA+Bb,GAAgB,GAClFK,EAAUlC,KAAK2C,SAAW3C,KAAKK,aAAa6C,cAAclD,KAAKC,kBAAmBD,KAAK2C,QAAUN,EAAA,OAAKK,MAAM,iCAC3GL,EAAA,kBAAgBc,KAAMnD,KAAK2C,OAAQS,OAAM,QAClC,I,CAOTH,SAASpB,GACf,OAAQ7B,KAAKyC,WAAaY,EAAWxB,E"}
{"version":3,"names":["TypeHelper","isValidType","supportedTypes","type","includes","validateType","isDefined","this","console","debug","join","PositionHelper","isValidPosition","supportedPositions","position","validatePosition","soulModalCss","SoulModal","NO_FOOTER_CLASS","CLOSING_ANIMATION_CLASS","typesWithIndicator","supportedSizes","sizeHelper","SizeHelper","typeHelper","positionHelper","async","open","componentDidLoad","checkEmtpyButtons","addCancelListener","validateSize","dialog","showModal","render","h","class","isPositionSupported","isSizeSupported","size","onClose","emitCloseEvent","ref","el","closeButton","onClick","close","name","isTypeWithIndicator","isNotEmpty","label","heading","onSlotchange","toggleDialog","_a","animateClose","addEventListener","event","preventDefault","closeWithEsc","isValidSize","soulClose","emit","classList","add","remove","once","host","querySelector"],"sources":["./src/services/TypeHelper.ts","./src/services/PositionHelper.ts","./src/components/soul-modal/soul-modal.scss?tag=soul-modal&encapsulation=shadow","./src/components/soul-modal/soul-modal.tsx"],"sourcesContent":["import {isDefined} from '../utils/utils';\n\nexport class TypeHelper {\n\n  public isValidType(supportedTypes: string[], type: string): boolean {\n    return supportedTypes.includes(type);\n  }\n\n  public validateType(supportedTypes: string[], type?: string): void {\n    if (isDefined(type) && !this.isValidType(supportedTypes, type)) {\n      console.debug(`Type ${type} not supported. Supported types: ${supportedTypes.join(', ')}`);\n    }\n  }\n}\n\n","import {isDefined} from '../utils/utils';\n\nexport class PositionHelper {\n\n  public isValidPosition(supportedPositions: string[], position: string): boolean {\n    return supportedPositions.includes(position);\n  }\n\n  public validatePosition(supportedPositions: string[], position?: string): void {\n    if (isDefined(position) && !this.isValidPosition(supportedPositions, position)) {\n      console.debug(`Position ${position} not supported. Supported types: ${supportedPositions.join(', ')}`);\n    }\n  }\n}\n\n","@use \"modules/base-styles/reset\";\n@use \"modules/components/button\";\n@use \"soul-modal-base\";\n@use \"soul-modal-animation\";\n@use \"soul-modal-size\";\n","import { Component, ComponentDidLoad, Element, Event, EventEmitter, Method, Prop, Watch, h } from \"@stencil/core\";\nimport { SizeHelper } from \"../../services/SizeHelper\";\nimport { TypeHelper } from \"../../services/TypeHelper\";\nimport { PositionHelper } from \"../../services/PositionHelper\";\nimport {isNotEmpty} from '../../utils/utils';\n\n@Component({\n  tag: 'soul-modal',\n  styleUrl: 'soul-modal.scss',\n  shadow: true\n})\nexport class SoulModal implements ComponentDidLoad {\n\n  @Prop({ reflect: true }) public closeButton: boolean = false;\n  @Prop({ reflect: true }) public closeWithEsc: boolean = false;\n  @Prop({ reflect: true }) public heading: string;\n  @Prop({ reflect: true }) public label: string;\n  @Prop({ mutable: true, reflect: true }) public open: boolean = false;\n  @Prop({ reflect: true }) public position: 'center' | 'side-right' | 'side-left' = 'center';\n  @Prop({ reflect: true }) public size: 's' | 'm' | 'l' | 'xl' = 'm';\n  @Prop({ reflect: true }) public type: 'neutral' | 'info' | 'warning' | 'critical' = 'neutral';\n\n  @Event() public soulClose: EventEmitter<void>;\n\n  @Element() public host: HTMLElement;\n  private readonly NO_FOOTER_CLASS = 'soul-modal--no-footer';\n  private readonly CLOSING_ANIMATION_CLASS = 'soul-modal--closing';\n  private dialog: HTMLDialogElement;\n  private typesWithIndicator = ['info', 'warning', 'critical'];\n  private supportedTypes = [...this.typesWithIndicator, 'neutral'];\n  private supportedSizes = ['s', 'm', 'l', 'xl'];\n  private supportedPositions = ['center', 'side-right', 'side-left'];\n  private sizeHelper = new SizeHelper();\n  private typeHelper = new TypeHelper();\n  private positionHelper = new PositionHelper();\n\n  @Method()\n  public async show() {\n    this.open = true;\n  }\n\n  @Method()\n  public async close() {\n    this.open = false;\n  }\n\n  componentDidLoad(): void {\n    this.checkEmtpyButtons();\n    this.addCancelListener();\n    this.validateType();\n    this.validateSize();\n    this.validatePosition();\n    if (this.open) {\n      this.dialog.showModal();\n    }\n  }\n\n  render() {\n    return (\n      <dialog class={{\n        'soul-modal': true,\n        'soul-modal--side-right': this.position === 'side-right',\n        'soul-modal--side-left': this.position === 'side-left',\n        'soul-modal--center': this.position === 'center' || !this.isPositionSupported(),\n        [this.isSizeSupported() ? `soul-modal--${this.size}` : 'soul-modal--m']: true\n      }} onClose={() => this.emitCloseEvent()}\n        ref={el => this.dialog = el as HTMLDialogElement}>\n        <section class=\"soul-modal__window\">\n          {this.closeButton ? <div class=\"soul-modal__close\">\n            <button onClick={() => {\n              this.close();\n            }} class=\"soul-button soul-button--default soul-button--compact soul-button--icon-only\">\n              <span class=\"soul-button__icon\"><soul-icon name=\"close\"></soul-icon></span>\n            </button>\n          </div> : ''}\n          <header class=\"soul-modal__header\">\n            {this.isTypeWithIndicator(this.type) ? <soul-indicator class=\"soul-modal__indicator\" type={this.type}></soul-indicator> : ''}\n            <div class=\"soul-modal__header-content\">\n              {isNotEmpty(this.label) ? <span class=\"soul-modal__label\">{this.label}</span> : ''}\n              <h1 class=\"soul-modal__heading\">{this.heading}</h1>\n            </div>\n          </header>\n          <article class=\"soul-modal__body\">\n            <div class=\"soul-modal__top-content\">\n              <slot name=\"top-content\"></slot>\n            </div>\n            <div class=\"soul-modal__content\">\n              <slot name=\"content\"></slot>\n            </div>\n          </article>\n          <footer class=\"soul-modal__footer\">\n            <slot onSlotchange={() => this.checkEmtpyButtons()} name=\"buttons\"></slot>\n          </footer>\n        </section>\n      </dialog>\n    );\n  }\n\n  @Watch('type')\n  private validateType(): void {\n    this.typeHelper.validateType(this.supportedTypes, this.type);\n  }\n\n  @Watch('size')\n  private validateSize(): void {\n    this.sizeHelper.validateSize(this.supportedSizes, this.size);\n  }\n\n  @Watch('position')\n  private validatePosition(): void {\n    this.positionHelper.validatePosition(this.supportedPositions, this.position);\n  }\n\n  @Watch('open')\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore : method is declared but never used\n  private toggleDialog(): void {\n    this.open ? this.dialog?.showModal() : this.animateClose();\n  }\n\n  private addCancelListener(): void {\n    this.dialog.addEventListener('cancel', (event: Event) => {\n      event.preventDefault();\n\n      if (this.closeWithEsc) {\n        this.close();\n      }\n    });\n  }\n\n  private isTypeWithIndicator(type: 'neutral' | 'info' | 'warning' | 'critical'): type is 'info' | 'warning' | 'critical' {\n    return type && this.typeHelper.isValidType(this.typesWithIndicator, type);\n  }\n\n  private isSizeSupported(): boolean {\n    return this.size && this.sizeHelper.isValidSize(this.supportedSizes, this.size);\n  }\n\n  private isPositionSupported(): boolean {\n    return this.position && this.positionHelper.isValidPosition(this.supportedPositions, this.position);\n  }\n\n  private emitCloseEvent(): void {\n    this.soulClose.emit();\n  }\n\n  private animateClose(): void {\n    this.dialog.classList.add(this.CLOSING_ANIMATION_CLASS);\n    this.dialog.addEventListener('animationend', () => {\n      this.dialog.close();\n      this.dialog.classList.remove(this.CLOSING_ANIMATION_CLASS);\n    }, { once: true })\n  }\n\n  private checkEmtpyButtons(): void {\n    this.host.querySelector('[slot=\"buttons\"]') ?\n      this.dialog.classList.remove(this.NO_FOOTER_CLASS) :\n      this.dialog.classList.add(this.NO_FOOTER_CLASS);\n  }\n}\n"],"mappings":"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"}
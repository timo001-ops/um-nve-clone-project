{"version":3,"file":"TooltipHelper.js","sourceRoot":"","sources":["../../../../../../src/services/TooltipHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import {autoUpdate, computePosition, flip, hide, offset, Placement} from '@floating-ui/dom';\nimport {HTMLPopoverElement} from '../types/PopoverElement';\n\nexport class TooltipHelper {\n\n  private reference: HTMLElement;\n  private tooltip: HTMLPopoverElement;\n  private tooltipPosition: Placement = 'top-start';\n  private stopAutoUpdate: () => void;\n\n  constructor(reference: HTMLElement, tooltip: HTMLElement) {\n    this.reference = reference;\n    this.tooltip = tooltip as HTMLPopoverElement;\n    this.addTriggerEventListeners();\n  }\n\n  public showTooltip = () => {\n    if (this.reference.matches(':focus') || this.reference.matches(':hover')) {\n      this.tooltip?.showPopover();\n    }\n  };\n\n  public hideTooltip = () => {\n    if (this.canHideTooltip()) {\n      this.tooltip.hidePopover();\n    }\n  };\n\n  public connect(): void {\n    if (!this.tooltip || !this.reference) {\n      return;\n    }\n    this.tooltip.setAttribute('popover', 'manual');\n\n    const updateCallback = () => {\n      computePosition(this.reference, this.tooltip,\n        {\n          strategy: 'fixed',\n          placement: this.tooltipPosition,\n          middleware: [\n            offset(1),\n            flip({elementContext: 'reference'}),\n            flip({boundary: document.body}),\n            hide({elementContext: 'reference'}),]\n        }).then(({x, y, middlewareData}) => {\n        if (middlewareData.hide) {\n          Object.assign(this.tooltip.style, {\n            visibility: middlewareData.hide.referenceHidden ? 'hidden' : 'visible'\n          });\n        }\n        Object.assign(this.tooltip.style, {\n          left: `${x}px`,\n          top: `${y}px`\n        });\n      });\n    };\n\n    this.stopAutoUpdate = autoUpdate(this.reference, this.tooltip, updateCallback);\n  }\n\n  public disconnect(): void {\n    this.removeTriggerEventListeners();\n    this.stopAutoUpdate && this.stopAutoUpdate();\n  }\n\n  public setTooltipPosition(position: Placement): void {\n    this.tooltipPosition = position;\n  }\n\n  private addTriggerEventListeners(): void {\n    this.reference.addEventListener('mouseenter', this.showTooltip);\n    this.reference.addEventListener('mouseleave', this.hideTooltip);\n    this.reference.addEventListener('focus', this.showTooltip);\n    this.reference.addEventListener('blur', this.hideTooltip);\n  }\n\n  private removeTriggerEventListeners(): void {\n    this.reference.removeEventListener('mouseenter', this.showTooltip);\n    this.reference.removeEventListener('mouseleave', this.hideTooltip);\n    this.reference.removeEventListener('focus', this.showTooltip);\n    this.reference.removeEventListener('blur', this.hideTooltip);\n  }\n\n  private canHideTooltip(): boolean {\n    return !this.reference.matches(':focus') && !this.reference.matches(':hover');\n  }\n}\n"]}
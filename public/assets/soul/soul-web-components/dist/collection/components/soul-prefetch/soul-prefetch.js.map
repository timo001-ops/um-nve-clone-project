{"version":3,"file":"soul-prefetch.js","sourceRoot":"","sources":["../../../../../../../src/components/soul-prefetch/soul-prefetch.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAoB,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAC,MAAM,eAAe,CAAC;AAOlF,MAAM,OAAO,YAAY;;uBAE8B,KAAK;;;;EAM1D,MAAM;IACJ,OAAO,WAAK,KAAK,EAAC,eAAe,EAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,EAAoB,GAAQ,CAAC;EAC7F,CAAC;EAGD,KAAK,CAAC,gBAAgB;IACpB,IAAI,IAAI,CAAC,WAAW,EAAE;MACpB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;EACH,CAAC;EAGD,KAAK,CAAC,eAAe;IACnB,UAAU,CAAC,GAAG,EAAE;MACd,MAAM,oBAAoB,GAAkB,EAAE,CAAC;MAC/C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;QACpC,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACtD,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;MAC1C,CAAC,CAAC,CAAC;MACH,UAAU,CAAC,GAAG,EAAE;QACd,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;MAClD,CAAC,EAAE,KAAK,CAAC,CAAA;IACX,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;EACjB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {Component, ComponentDidLoad, h, Method, Prop, Watch} from '@stencil/core';\n\n@Component({\n  tag: 'soul-prefetch',\n  styleUrl: 'soul-prefetch.scss',\n  shadow: true,\n})\nexport class SoulPrefetch implements ComponentDidLoad {\n\n  @Prop({reflect: true}) public fetchOnLoad: boolean = false;\n  @Prop({reflect: false}) public components: string[];\n  @Prop({reflect: true}) public delay: 0;\n\n  private container: HTMLElement;\n\n  render() {\n    return <div class=\"soul-prefetch\" ref={el => this.container = el as HTMLDivElement}></div>;\n  }\n\n  @Watch('components')\n  async componentDidLoad(): Promise<void> {\n    if (this.fetchOnLoad) {\n      this.fetchComponents();\n    }\n  }\n\n  @Method()\n  async fetchComponents(): Promise<void> {\n    setTimeout(() => {\n      const htmlElementsToRemove: HTMLElement[] = [];\n      this.components.forEach((component) => {\n        const htmlElement = document.createElement(component);\n        htmlElementsToRemove.push(htmlElement);\n        this.container.appendChild(htmlElement);\n      });\n      setTimeout(() => {\n        htmlElementsToRemove.forEach(el => el.remove());\n      }, 50000)\n    }, this.delay);\n  }\n}\n"]}
{"version":3,"file":"soul-progress-ring.js","sourceRoot":"","sources":["../../../../../../../src/components/soul-progress-ring/soul-progress-ring.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Component, Host, h, Prop, Watch, ComponentWillLoad} from '@stencil/core';\nimport {isDefined, isNotEmpty} from '../../utils/utils';\nimport {ProgressHelper, ProgressRange} from '../../services/ProgressHelper';\nimport {StatusHelper} from '../../services/StatusHelper';\nimport {SizeHelper} from '../../services/SizeHelper';\n\n@Component({\n  tag: 'soul-progress-ring',\n  styleUrl: 'soul-progress-ring.scss',\n  shadow: true,\n})\nexport class SoulProgressRing implements ComponentWillLoad {\n\n  @Prop({reflect: true}) size: 's' | 'm' | 'l' = 'm';\n  @Prop({reflect: true}) indeterminate: boolean = false;\n  @Prop({reflect: true}) progress = 0;\n  @Prop({reflect: true}) min = 0;\n  @Prop({reflect: true}) max = 100;\n  @Prop({reflect: true}) label: string;\n  @Prop({reflect: true}) accessibilityLabel: string;\n  @Prop({reflect: true}) hideLabel: boolean = false;\n  @Prop({reflect: true}) status: 'warning' | 'positive' | 'critical';\n  @Prop({reflect: true}) color: 'neutral' | 'primary' = 'neutral';\n  private supportedStatuses = ['positive', 'warning', 'critical'];\n  private supportedSizes = ['s', 'm', 'l'];\n  private progressHelper = new ProgressHelper();\n  private statusHelper = new StatusHelper();\n  private sizeHelper = new SizeHelper();\n  private range: ProgressRange = {min: 0, max: 100};\n  private radiusBySize: RadiusBySize = {s: '44%', m: '45%', l: '47%'};\n  private readonly DEFAULT_SIZE = 'm';\n\n\n  componentWillLoad(): Promise<void> | void {\n    this.range = this.progressHelper.getRange(this.min, this.max);\n  }\n\n  @Watch('min')\n  @Watch('max')\n  rangeValueChange(): void {\n    this.range = this.progressHelper.getRange(this.min, this.max);\n  }\n\n  @Watch('status')\n  public statusChange(newValue: string): void {\n    this.statusHelper.validateStatus(this.supportedStatuses, newValue);\n  }\n\n  @Watch('size')\n  public sizeChange(newValue: string): void {\n    this.sizeHelper.validateSize(this.supportedSizes, newValue);\n  }\n\n  render() {\n    const progressPercentage = this.progressHelper.getProgressPercentage(this.range, this.progress);\n    const label = this.progressHelper.getLabel(this.label, this.indeterminate, progressPercentage);\n    const accessibilityLabel = this.progressHelper.getAccessibilityLabel(this.accessibilityLabel, label);\n    const radiusBySize = isDefined(this.size) && this.sizeHelper.isValidSize(this.supportedSizes, this.size) ? this.radiusBySize[this.size] : this.radiusBySize[this.DEFAULT_SIZE];\n    return (\n      <Host role='progressbar' aria-valuemin={this.min} aria-valuemax={this.max} aria-valuenow={this.progress} aria-label={accessibilityLabel}\n            title={this.hideLabel ? (accessibilityLabel ? accessibilityLabel : label) : ''}>\n        <div class={{\n          'soul-progress-ring': true,\n          [this.indeterminate ? 'soul-progress-ring--indeterminate' : `soul-progress-ring--progress-${progressPercentage}`]: true,\n          [isDefined(this.size) && this.sizeHelper.isValidSize(this.supportedSizes, this.size) ? `soul-progress-ring--${this.size}` : 'soul-progress-ring--m']: true,\n          'soul-progress-ring--critical': this.status === 'critical',\n          'soul-progress-ring--warning': this.status === 'warning',\n          'soul-progress-ring--positive': this.status === 'positive'\n        }}>\n          <svg class=' soul-progress-ring__circles' width='100%' height='100%'>\n            <circle class='soul-progress-ring__track' cx='50%' cy='50%' r={radiusBySize}/>\n            <circle class='soul-progress-ring__fill' cx='50%' cy='50%' r={radiusBySize}/>\n          </svg>\n          {this.hasLabel(label) ? <span class='soul-progress-ring__content'>{label}</span> : ''}\n          {isDefined(this.status) && this.statusHelper.isValidStatus(this.supportedStatuses, this.status) ? <div class='soul-progress-ring__indicator'>\n            <soul-indicator type={this.status} border></soul-indicator>\n          </div> : ''\n          }\n        </div>\n      </Host>\n    );\n  }\n\n  private hasLabel(label: string): boolean {\n    return !this.hideLabel && isNotEmpty(label);\n  }\n\n\n}\n\ntype RadiusBySize = { l: string, s: string, m: string };\n"]}
{"version":3,"file":"soul-skeleton-table.js","sourceRoot":"","sources":["../../../../../../../src/components/soul-skeleton-table/soul-skeleton-table.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,IAAI,EAAE,MAAM,wBAAwB,CAAC;AAO9C,MAAM,OAAO,iBAAiB;;IACpB,sBAAiB,GAAG,CAAC,CAAC;IACtB,yBAAoB,GAAG,CAAC,CAAC;sBAGJ,IAAI;gBAGnB,IAAI,CAAC,iBAAiB;mBAGnB,IAAI,CAAC,oBAAoB;;EAE1C,UAAU;IACR,OAAO,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;EACrE,CAAC;EAED,OAAO;IACL,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;EAC5D,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,aAAO,KAAK,EAAC,YAAY;QACtB,IAAI,CAAC,UAAU,CAAC,CAAC;UAChB;YACE,cACG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,UAAI,KAAK,EAAC,iBAAiB;cAAC,8BAA2C,CAAK,CAAC,CACnH,CACC,CAAC,CAAC,CAAC,EAAE;QACf,iBACG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,UAAI,KAAK,EAAC,gBAAgB,IAC7D,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,UAAI,KAAK,EAAC,iBAAiB;UAAC,0BAAoB,KAAK,EAAE,CAAC,GAAuB,CAAK,CAAC,CAC3H,CAAC,CACA,CACF,CACF,CACT,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Host } from '@stencil/core';\nimport { Prop } from '@stencil/core/internal';\n\n@Component({\n  tag: 'soul-skeleton-table',\n  styleUrl: 'soul-skeleton-table.scss',\n  shadow: true,\n})\nexport class SoulSkeletonTable {\n  private defaultRowsNumber = 3;\n  private defaultColumnsNumber = 2;\n\n  @Prop({ reflect: true })\n  public withHeader: boolean = true;\n\n  @Prop({ reflect: true })\n  public rows = this.defaultRowsNumber;\n\n  @Prop({ reflect: true })\n  public columns = this.defaultColumnsNumber;\n\n  getColumns(): number {\n    return this.columns < 0 ? this.defaultColumnsNumber : this.columns;\n  }\n\n  getRows(): number {\n    return this.rows < 0 ? this.defaultRowsNumber : this.rows;\n  }\n\n  render() {\n    return (\n      <Host>\n        <table class=\"soul-table\">\n          {this.withHeader ?\n            <thead>\n              <tr>\n                {[...Array(this.getColumns())].map(() => <th class=\"soul-table-cell\"><soul-skeleton-label></soul-skeleton-label></th>)}\n              </tr>\n            </thead> : ''}\n          <tbody>\n            {[...Array(this.getRows())].map(() => <tr class=\"soul-table-row\">\n              {[...Array(this.getColumns())].map(() => <td class=\"soul-table-cell\"><soul-skeleton-text lines={1}></soul-skeleton-text></td>)}\n            </tr>)}\n          </tbody>\n        </table>\n      </Host >\n    );\n  }\n}\n"]}
{"version":3,"file":"soul-tooltip.component.js","sourceRoot":"","sources":["../../../../../../../src/components/soul-tooltip/soul-tooltip.component.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,IAAI,EAAE,CAAC,EAAO,IAAI,EAAoB,KAAK,EAAC,MAAM,eAAe,CAAC;AACrF,OAAO,EAAC,aAAa,EAAC,MAAM,8BAA8B,CAAC;AAC3D,OAAO,EAAC,SAAS,EAAE,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAO3D,MAAM,OAAO,oBAAoB;;oBAE4J,WAAW;;;;;;EAS/L,oBAAoB;;IACzB,MAAA,IAAI,CAAC,aAAa,0CAAE,UAAU,EAAE,CAAC;EACnC,CAAC;EAEM,gBAAgB;IACrB,IAAI,CAAC,uBAAuB,EAAE,CAAC;EACjC,CAAC;EAEM,MAAM;IACX,OAAO,CACL,EAAC,IAAI;MACH,WAAK,KAAK,EAAE,EAAC,cAAc,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,CAAC,WAAW,EAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,GAAG,EAAoB,EAAE,IAAI,EAAC,SAAS,IAChJ,IAAI,CAAC,IAAI,CAAO,CACd,CACR,CAAC;EACJ,CAAC;EAED,IAAY,WAAW;IACrB,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAChI,CAAC;EAIO,uBAAuB;;IAC7B,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAChD,MAAA,IAAI,CAAC,aAAa,0CAAE,UAAU,EAAE,CAAC;IACjC,IAAI,SAAS,CAAC,cAAc,CAAC,EAAE;MAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;MAC5E,IAAI,CAAC,kBAAkB,EAAE,CAAC;MAC1B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;MAC7B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;EACH,CAAC;EAGO,kBAAkB;;IACxB,MAAA,IAAI,CAAC,aAAa,0CAAE,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EACxD,CAAC;EAEO,iBAAiB;IACvB,OAAO,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACxG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import {Component, Host, h, JSX, Prop, ComponentDidLoad, Watch} from '@stencil/core';\nimport {TooltipHelper} from '../../services/TooltipHelper';\nimport {isDefined, isEmptyString} from '../../utils/utils';\n\n@Component({\n  tag: 'soul-tooltip',\n  styleUrl: 'soul-tooltip.scss',\n  shadow: true\n})\nexport class SoulTooltipComponent implements ComponentDidLoad {\n\n  @Prop({reflect: true}) position: 'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' = 'top-start';\n  @Prop({reflect: true}) status: 'warning' | 'critical';\n  @Prop({reflect: true}) triggerId: string;\n  @Prop({reflect: true}) text: string;\n  @Prop({reflect: false}) triggerElement: HTMLElement;\n\n  private tooltipElement: HTMLDivElement;\n  private tooltipHelper: TooltipHelper;\n\n  public disconnectedCallback(): void {\n    this.tooltipHelper?.disconnect();\n  }\n\n  public componentDidLoad(): void {\n    this.initializeTooltipHelper();\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Host>\n        <div class={{'soul-tooltip': true, 'soul-tooltip--hidden': this.hideTooltip}} ref={el => this.tooltipElement = el as HTMLDivElement} role=\"tooltip\">\n          {this.text}</div>\n      </Host>\n    );\n  }\n\n  private get hideTooltip(): boolean {\n    return (!isDefined(this.triggerId) && !isDefined(this.triggerElement)) || (isEmptyString(this.text) || !isDefined(this.text));\n  }\n\n  @Watch('triggerId')\n  @Watch('triggerElement')\n  private initializeTooltipHelper(): void {\n    const triggerElement = this.getTriggerElement();\n    this.tooltipHelper?.disconnect();\n    if (isDefined(triggerElement)) {\n      this.tooltipHelper = new TooltipHelper(triggerElement, this.tooltipElement);\n      this.setTooltipPosition();\n      this.tooltipHelper.connect();\n      this.tooltipHelper.showTooltip();\n    }\n  }\n\n  @Watch('position')\n  private setTooltipPosition(): void {\n    this.tooltipHelper?.setTooltipPosition(this.position);\n  }\n\n  private getTriggerElement(): HTMLElement | null {\n    return isDefined(this.triggerElement) ? this.triggerElement : document.getElementById(this.triggerId);\n  }\n\n}\n"]}
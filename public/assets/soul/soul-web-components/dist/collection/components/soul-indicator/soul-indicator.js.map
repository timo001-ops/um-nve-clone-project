{"version":3,"file":"soul-indicator.js","sourceRoot":"","sources":["../../../../../../../src/components/soul-indicator/soul-indicator.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAC,MAAM,eAAe,CAAC;AAEvE,OAAO,EAAC,UAAU,EAAC,MAAM,2BAA2B,CAAC;AAOrD,MAAM,OAAO,aAAa;;IAOhB,eAAU,GAAG,IAAI,UAAU,EAAE,CAAC;IAE9B,mBAAc,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;gBANA,GAAG;kBACH,KAAK;kBACL,KAAK;;EAOvC,UAAU,CAAC,QAAgB;IAChC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;EAC9D,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,YAAM,KAAK,EAAE,kCAAkC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,EAAE,EAAE,GAAS,CAClH,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {Component, Element, h, Host, Prop, Watch} from '@stencil/core';\nimport {HostElement} from '@stencil/core/internal';\nimport {SizeHelper} from '../../services/SizeHelper';\n\n@Component({\n  tag: 'soul-indicator',\n  styleUrl: 'soul-indicator.scss',\n  shadow: true\n})\nexport class SoulIndicator {\n\n  @Prop({reflect: true}) type: 'positive' | 'warning' | 'not-allowed' | 'critical' | 'info' | 'help' | 'waiting' | 'locked' | 'experimental';\n  @Prop({reflect: true}) size: 's' | 'm' = 's';\n  @Prop({reflect: true}) inline: boolean = false;\n  @Prop({reflect: true}) border: boolean = false;\n  @Element() hostElement: HostElement;\n  private sizeHelper = new SizeHelper();\n\n  private supportedSizes = ['s', 'm', 'l'];\n\n  @Watch('size')\n  public sizeChange(newValue: string): void {\n    this.sizeHelper.validateSize(this.supportedSizes, newValue);\n  }\n\n  render() {\n    return (\n      <Host>\n        <span class={`soul-indicator soul-indicator--${this.type} ${this.border ? 'soul-indicator--with-border' : ''}`}></span>\n      </Host>\n    );\n  }\n}\n"]}
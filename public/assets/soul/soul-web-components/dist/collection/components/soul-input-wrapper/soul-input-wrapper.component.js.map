{"version":3,"file":"soul-input-wrapper.component.js","sourceRoot":"","sources":["../../../../../../../src/components/soul-input-wrapper/soul-input-wrapper.component.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Component, Element, ComponentInterface, h, Host, JSX, Prop, State, Event, forceUpdate, EventEmitter} from '@stencil/core';\nimport {isDefined, isNotEmpty} from '../../utils/utils';\nimport {Keymap} from '../../utils/Keymap';\n\n@Component({\n  tag: 'soul-input-wrapper',\n  styleUrl: 'soul-input-wrapper.scss',\n  shadow: true\n})\nexport class SoulInputWrapper implements ComponentInterface {\n\n  @Prop({reflect: true}) public additionalLabel: string;\n  @Prop({reflect: true}) public clearButton: boolean = false;\n  @Prop({reflect: true}) public inputOnly: boolean = false;\n  @Prop({reflect: true}) public helpText: string;\n  @Prop({reflect: true}) public invalidStyle: boolean = false;\n  @Prop({reflect: true}) public label: string;\n  @Prop({reflect: true}) public status: 'warning' | 'critical';\n  @Prop({reflect: true}) public statusMessage: string;\n  @Prop({reflect: true}) public tooltipPosition: 'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' = 'top-start';\n\n  @Event() public soulClear: EventEmitter<void>;\n\n  @State() private showClearButton = false;\n  @State() private isPasswordRevealed = false;\n  @State() private invalid = false;\n  @Element() private hostElement: HTMLElement;\n\n  private readonly instanceId = `soul-input-wrapper-${++inputWrapperId}`;\n  private readonly INPUT_TYPE_ATTRIBUTE = 'type';\n  private readonly INPUT_TYPE_DATA_ATTRIBUTE = 'data-type';\n  private inputSlot: HTMLSlotElement;\n  private inputElement: HTMLInputElement;\n  private overlayElement: HTMLDivElement;\n  private typeObserver: MutationObserver;\n  private tooltipElement: HTMLSoulTooltipElement;\n  private overlayResizeObserver = new ResizeObserver(this.setInputRightPadding.bind(this));\n  private supportedStatuses = ['warning', 'critical'];\n  private readonly dateTimeTypes = ['date', 'month', 'week', 'time', 'datetime-local'];\n  private readonly typesWithClearButton = ['text', 'email', 'tel', 'url', 'search', 'color'];\n\n  disconnectedCallback(): void {\n    this.typeObserver?.disconnect();\n  }\n\n  componentDidRender(): void {\n    this.setTooltipTriggerElement();\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Host aria-label={this.label}>\n        <div\n          id={this.instanceId}\n          class={{\n            'soul-input-wrapper': true,\n            'soul-input-wrapper--invalid': (this.invalidStyle && this.invalid),\n            'soul-input-wrapper--warning': this.status === 'warning',\n            'soul-input-wrapper--critical': this.status === 'critical',\n            'soul-input-wrapper--readonly': this.isReadonly\n          }}>\n          {this.renderLabel()}\n          <div class=\"soul-input-wrapper__control\">\n            {this.renderTooltip()}\n            {this.renderSearchIcon()}\n            <slot onSlotchange={this.onInputSlotChange.bind(this)} ref={el => this.inputSlot = el as HTMLSlotElement}></slot>\n            {this.renderInputOverlays()}\n          </div>\n          {this.renderStatusMessage()}\n          {this.renderHelpText()}\n          {this.renderAction()}\n        </div>\n      </Host>\n    );\n  }\n\n  private initializeInput(): void {\n    this.inputElement = this.inputSlot.assignedElements()[0] as HTMLInputElement;\n    this.inputElement.addEventListener('input', this.onInput.bind(this));\n    this.inputElement.addEventListener('focus', this.setClearButtonVisibility.bind(this));\n    this.inputElement.addEventListener('blur', this.setClearButtonVisibility.bind(this));\n    this.inputElement.addEventListener('mouseleave', this.setClearButtonVisibility.bind(this));\n    this.inputElement.addEventListener('mouseenter', this.setClearButtonVisibility.bind(this));\n    if (this.inputType === 'search') {\n      this.inputElement.addEventListener('keydown', this.onKeyDown.bind(this));\n    }\n    this.overlayResizeObserver.disconnect();\n    this.overlayResizeObserver.observe(this.overlayElement);\n    this.checkInputValidity();\n    this.listenForTypeChange();\n    this.setTooltipTriggerElement();\n  }\n\n  private get isReadonly(): boolean {\n    return this.inputElement?.readOnly;\n  }\n\n  private get isPasswordType(): boolean {\n    return this.inputType === 'password' || this.inputElement?.getAttribute('data-type') === 'password';\n  }\n\n  private get isDateType(): boolean {\n    return this.dateTimeTypes.includes(this.inputType);\n  }\n\n  private get isSearchType(): boolean {\n    return this.inputType === 'search';\n  }\n\n  private get isStatusValid(): boolean {\n    return this.supportedStatuses.includes(this.status);\n  }\n\n  private get inputType(): string {\n    return this.inputElement?.type;\n  }\n\n  public get shouldRenderStatusMessage(): boolean {\n    return !this.isReadonly && ((this.isStatusValid || (this.invalidStyle && this.invalid)) && isNotEmpty(this.statusMessage));\n  }\n\n  public get shouldRenderCustomIcon(): boolean {\n    return this.isDateType && this.showCustomIconForCurrenBrowser;\n  }\n\n  public get showCustomIconForCurrenBrowser(): boolean {\n    return !navigator.userAgent.includes('Firefox');\n  }\n\n  public get shouldRenderTooltip(): boolean {\n    return this.inputOnly && (this.shouldRenderStatusMessage || isNotEmpty(this.helpText));\n  }\n\n  public get shouldRenderStatusIndicator(): boolean {\n    return !this.isReadonly && (this.isStatusValid || (this.invalidStyle && this.invalid));\n  }\n\n  public get shouldRenderClearButton(): boolean {\n    return !this.isReadonly && this.isClearSupported && this.showClearButton && this.clearButton;\n  }\n\n  public get isClearSupported(): boolean {\n    return this.typesWithClearButton.includes(this.inputType) && !this.isPasswordType;\n  }\n\n  private setTooltipTriggerElement(): void {\n    if (isDefined(this.tooltipElement)) {\n      this.tooltipElement.triggerElement = this.inputElement;\n    }\n  }\n\n  private setInputRightPadding(): void {\n    this.hostElement.style.setProperty('--soul-input-wrapper-input-padding-right', this.getOverlayElementWidth());\n  }\n\n  private getOverlayElementWidth(): string {\n    return this.overlayElement ? `${this.overlayElement.offsetWidth}px` : '0px';\n  }\n\n  private onInputSlotChange(): void {\n    if (this.inputElement !== this.inputSlot.assignedElements()[0]) {\n      this.initializeInput();\n      forceUpdate(this);\n    }\n  }\n\n  private checkInputValidity(): void {\n    this.invalid = !this.inputElement.checkValidity();\n  }\n\n  private focusInput(): void {\n    this.inputElement.focus();\n  }\n\n  private onInput(): void {\n    this.showClearButton = this.inputElement.value.length > 0;\n    this.checkInputValidity();\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    if (event.key === Keymap.ESC) {\n      event.preventDefault();\n      this.onClearButtonClick();\n    }\n  }\n\n  private setClearButtonVisibility(): void {\n    this.showClearButton = this.inputElement.matches(':focus') || this.inputElement.matches(':hover') || this.hostElement.matches(':focus-within') || this.overlayElement?.matches(':hover') ? this.inputElement.value.length > 0 : false;\n  }\n\n  private onClearButtonClick(): void {\n    this.inputElement.value = '';\n    this.showClearButton = false;\n    this.checkInputValidity();\n    this.focusInput();\n    this.soulClear.emit();\n  }\n\n  private onDateTimeIconClick(): void {\n    this.inputElement.focus();\n    this.inputElement.showPicker();\n  }\n\n  private onPasswordVisibilityToggle(): void {\n    if (this.inputElement.type === 'password') {\n      this.inputElement.setAttribute(this.INPUT_TYPE_DATA_ATTRIBUTE, 'password');\n      this.inputElement.setAttribute(this.INPUT_TYPE_ATTRIBUTE, 'text');\n      this.isPasswordRevealed = true;\n    } else if (this.inputElement.getAttribute(this.INPUT_TYPE_DATA_ATTRIBUTE) === 'password') {\n      this.inputElement.setAttribute(this.INPUT_TYPE_ATTRIBUTE, 'password');\n      this.inputElement.removeAttribute(this.INPUT_TYPE_DATA_ATTRIBUTE);\n      this.isPasswordRevealed = false;\n    }\n  }\n\n  private hasSlottedAction(): boolean {\n    return !!this.hostElement.querySelector('[slot=\"action\"]');\n  }\n\n  private listenForTypeChange(): void {\n    this.typeObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if(mutation.attributeName === 'type' && mutation.oldValue === 'text' && this.inputElement.type !== 'password') {\n          this.inputElement.removeAttribute(this.INPUT_TYPE_DATA_ATTRIBUTE);\n        }\n      });\n      this.isPasswordRevealed = this.inputElement.type !== 'password';\n      this.checkInputValidity();\n      forceUpdate(this);\n    });\n    this.typeObserver.observe(this.inputElement, {attributes: true, attributeOldValue : true});\n  }\n\n  private renderLabel(): JSX.Element {\n    return (this.label || this.additionalLabel) ?\n      <div class=\"soul-input-wrapper__label\">\n        <label onClick={this.focusInput.bind(this)}>{this.label}{this.renderAdditionalLabel()}</label>\n      </div> : '';\n  }\n\n  private renderAdditionalLabel(): JSX.Element {\n    return this.additionalLabel ?\n      <span class=\"soul-input-wrapper__additional-label\">{this.additionalLabel}</span> : '';\n  }\n\n  private renderTooltip(): JSX.Element {\n    return this.shouldRenderTooltip ?\n      <soul-tooltip text={this.shouldRenderStatusMessage ? this.statusMessage : this.helpText}\n                    status={this.status ? this.status : (this.invalid && this.invalidStyle) ? 'critical' : undefined} position={this.tooltipPosition}\n                    ref={el => this.tooltipElement = el as HTMLSoulTooltipElement}></soul-tooltip> : '';\n  }\n\n  private renderSearchIcon(): JSX.Element {\n    return this.isSearchType ? <soul-icon name=\"search\" size=\"s\" class=\"soul-input-wrapper__search-icon\"></soul-icon> : '';\n  }\n\n  private renderInputOverlays(): JSX.Element {\n    return <div class={{\n      'soul-input-wrapper__input-overlays': true,\n      'soul-input-wrapper__input-overlays--compact': !this.showCustomIconForCurrenBrowser && this.shouldRenderStatusIndicator && this.inputType?.includes('date')\n    }} data-type={this.inputType} ref={el => this.overlayElement = el as HTMLDivElement}>\n      {this.renderClearButton()}\n      {this.renderPasswordVisibilityToggle()}\n      {this.renderCalendarIcon()}\n      {this.renderStatusIndicator()}\n    </div>;\n  }\n\n  private renderPasswordVisibilityToggle(): JSX.Element {\n    return !this.isReadonly && this.isPasswordType ?\n      <button class=\"soul-input-wrapper__password-toggle soul-button soul-button--ghost soul-button--no-space soul-button--icon-only\"\n              onClick={this.onPasswordVisibilityToggle.bind(this)}>\n        <div class=\"soul-button__icon\">\n          <soul-icon name={this.isPasswordRevealed ? 'hide' : 'show'} size=\"s\"></soul-icon>\n        </div>\n      </button> : '';\n  }\n\n  private renderStatusIndicator(): JSX.Element {\n    return this.shouldRenderStatusIndicator ?\n      <soul-indicator size=\"s\" type={this.status === 'warning' && !this.invalid ? 'warning' : 'critical'}></soul-indicator> : '';\n  }\n\n  private renderCalendarIcon(): JSX.Element {\n    return !this.isReadonly && this.shouldRenderCustomIcon ?\n      <button class=\" soul-button soul-button--ghost soul-button--no-space soul-button--icon-only\" onClick={this.onDateTimeIconClick.bind(this)}>\n        <div class=\"soul-button__icon\">\n          <soul-icon size=\"m\" name={this.inputType === 'time' ? 'time' : 'calendar'}></soul-icon>\n        </div>\n      </button>\n      : '';\n  }\n\n  private renderClearButton(): JSX.Element {\n    return this.shouldRenderClearButton ?\n      <button class=\"soul-input-wrapper__clear soul-button soul-button--ghost soul-button--no-space soul-button--icon-only\" onClick={this.onClearButtonClick.bind(this)}\n              onBlur={this.setClearButtonVisibility.bind(this)}>\n        <div class=\"soul-button__icon\">\n          <soul-icon name=\"close\" size=\"s\" color=\"reduced\"></soul-icon>\n        </div>\n      </button> : '';\n  }\n\n  private renderStatusMessage(): JSX.Element {\n    return this.shouldRenderStatusMessage ?\n      <div class=\"soul-input-wrapper__status-message\">{this.statusMessage}</div> : '';\n  }\n\n  private renderHelpText(): JSX.Element {\n    return !this.isReadonly && this.helpText ?\n      <div class=\"soul-input-wrapper__help\">{this.helpText}</div> : '';\n  }\n\n  private renderAction(): JSX.Element {\n    return !this.isReadonly && this.hasSlottedAction() ?\n      <div class=\"soul-input-wrapper__action\">\n        <slot name=\"action\"></slot>\n      </div> : '';\n  }\n\n}\n\nlet inputWrapperId = 0;\n"]}